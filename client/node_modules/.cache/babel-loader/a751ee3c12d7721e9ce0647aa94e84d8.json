{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/Table/TableBody/TableRow/index.js\";\nimport React, { useMemo } from \"react\";\nimport TableCell from \"./TableCell/TableCell\";\nimport StaticCell from \"./TableCell/StaticCell\";\n\nconst TableRow = ({\n  data\n}) => {\n  const getRowCells = () => {\n    return data.map((cellData, index) => /*#__PURE__*/React.createElement(TableCell, {\n      key: index,\n      id: cellData.id,\n      value: cellData.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 10\n      }\n    }));\n  }; // <StaticCell key={index} value={index + 1} />,\n\n\n  const sumRow = useMemo(() => {\n    const sum = data.map(data => data.value).reduce((sum = 0, value) => sum + value);\n    return /*#__PURE__*/React.createElement(StaticCell, {\n      value: sum,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 14\n      }\n    });\n  }, [getRowCells()]);\n  const cells = [...getRowCells(), sumRowCell];\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, cells);\n};\n\nexport default TableRow;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/Table/TableBody/TableRow/index.js"],"names":["React","useMemo","TableCell","StaticCell","TableRow","data","getRowCells","map","cellData","index","id","value","sumRow","sum","reduce","cells","sumRowCell"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC5B,QAAMC,WAAW,GAAG,MAAM;AACvB,WAAOD,IAAI,CAACE,GAAL,CAAS,CAACC,QAAD,EAAWC,KAAX,kBACb,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,KAAhB;AAAuB,MAAA,EAAE,EAAED,QAAQ,CAACE,EAApC;AAAwC,MAAA,KAAK,EAAEF,QAAQ,CAACG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADI,CAAP;AAGF,GAJD,CAD4B,CAM5B;;;AAEA,QAAMC,MAAM,GAAGX,OAAO,CAAC,MAAM;AAC1B,UAAMY,GAAG,GAAGR,IAAI,CACZE,GADQ,CACHF,IAAD,IAAUA,IAAI,CAACM,KADX,EAERG,MAFQ,CAED,CAACD,GAAG,GAAG,CAAP,EAAUF,KAAV,KAAoBE,GAAG,GAAGF,KAFzB,CAAZ;AAGA,wBAAO,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAEE,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACF,GALqB,EAKnB,CAACP,WAAW,EAAZ,CALmB,CAAtB;AAMA,QAAMS,KAAK,GAAG,CAAC,GAAGT,WAAW,EAAf,EAAmBU,UAAnB,CAAd;AAEA,sBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACID,KADJ,CADH;AAMF,CAtBD;;AAwBA,eAAeX,QAAf","sourcesContent":["import React, { useMemo } from \"react\";\nimport TableCell from \"./TableCell/TableCell\";\nimport StaticCell from \"./TableCell/StaticCell\";\n\nconst TableRow = ({ data }) => {\n   const getRowCells = () => {\n      return data.map((cellData, index) => (\n         <TableCell key={index} id={cellData.id} value={cellData.value} />\n      ));\n   };\n   // <StaticCell key={index} value={index + 1} />,\n\n   const sumRow = useMemo(() => {\n      const sum = data\n         .map((data) => data.value)\n         .reduce((sum = 0, value) => sum + value);\n      return <StaticCell value={sum} />;\n   }, [getRowCells()]);\n   const cells = [...getRowCells(), sumRowCell];\n\n   return (\n      <tr>\n         {cells}\n         {/* <StaticCell value={sumCell} /> */}\n      </tr>\n   );\n};\n\nexport default TableRow;\n"]},"metadata":{},"sourceType":"module"}