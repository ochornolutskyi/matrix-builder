{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/AverageRow/index.js\";\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport StaticCell from \"../CellRenderer/StaticCell\";\nimport SumCell from \"../CellRenderer/SumCell\";\nimport setCellRenderer from \"../setCellRenderer\";\nimport calculateAverageValues from \"./calculateAverageValues\";\nconst className = \"average-cell\";\n\nconst AverageRow = () => {\n  const matrixData = useSelector(state => state.matrix.data);\n  const averageValues = calculateAverageValues(matrixData);\n  const sumRow = averageValues.reduce((sum, value) => sum + value, 0).toFixed(2);\n  const [showPercentageValue, setShowPercentageValue] = useState(false);\n  const Renderer = setCellRenderer(showPercentageValue, StaticCell);\n  const avgRowCells = averageValues.map((value, index) => /*#__PURE__*/React.createElement(Renderer, {\n    className: className,\n    key: index,\n    value: value.toFixed(2),\n    sumRow: sumRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StaticCell, {\n    className: className,\n    key: \"avg\",\n    value: \"Avg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }\n  }), avgRowCells, /*#__PURE__*/React.createElement(SumCell, {\n    key: \"avg-sum\",\n    sumMouseEnterHandler: () => setShowPercentageValue(true),\n    sumMouseLeaveHandler: () => setShowPercentageValue(false),\n    value: sumRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }\n  }));\n};\n\nexport default AverageRow;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/AverageRow/index.js"],"names":["React","useState","useSelector","StaticCell","SumCell","setCellRenderer","calculateAverageValues","className","AverageRow","matrixData","state","matrix","data","averageValues","sumRow","reduce","sum","value","toFixed","showPercentageValue","setShowPercentageValue","Renderer","avgRowCells","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AAEA,MAAMC,SAAS,GAAG,cAAlB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACtB,QAAMC,UAAU,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaC,IAAzB,CAA9B;AACA,QAAMC,aAAa,GAAGP,sBAAsB,CAACG,UAAD,CAA5C;AACA,QAAMK,MAAM,GAAGD,aAAa,CACxBE,MADW,CACJ,CAACC,GAAD,EAAMC,KAAN,KAAgBD,GAAG,GAAGC,KADlB,EACyB,CADzB,EAEXC,OAFW,CAEH,CAFG,CAAf;AAGA,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDnB,QAAQ,CAAC,KAAD,CAA9D;AACA,QAAMoB,QAAQ,GAAGhB,eAAe,CAACc,mBAAD,EAAsBhB,UAAtB,CAAhC;AACA,QAAMmB,WAAW,GAAGT,aAAa,CAACU,GAAd,CAAkB,CAACN,KAAD,EAAQO,KAAR,kBACnC,oBAAC,QAAD;AACG,IAAA,SAAS,EAAEjB,SADd;AAEG,IAAA,GAAG,EAAEiB,KAFR;AAGG,IAAA,KAAK,EAAEP,KAAK,CAACC,OAAN,CAAc,CAAd,CAHV;AAIG,IAAA,MAAM,EAAEJ,MAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADiB,CAApB;AASA,sBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEP,SAAvB;AAAkC,IAAA,GAAG,EAAC,KAAtC;AAA4C,IAAA,KAAK,EAAC,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAEIe,WAFJ,eAGG,oBAAC,OAAD;AACG,IAAA,GAAG,EAAC,SADP;AAEG,IAAA,oBAAoB,EAAE,MAAMF,sBAAsB,CAAC,IAAD,CAFrD;AAGG,IAAA,oBAAoB,EAAE,MAAMA,sBAAsB,CAAC,KAAD,CAHrD;AAIG,IAAA,KAAK,EAAEN,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHH,CADH;AAYF,CA7BD;;AA+BA,eAAeN,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport StaticCell from \"../CellRenderer/StaticCell\";\nimport SumCell from \"../CellRenderer/SumCell\";\nimport setCellRenderer from \"../setCellRenderer\";\nimport calculateAverageValues from \"./calculateAverageValues\";\n\nconst className = \"average-cell\";\n\nconst AverageRow = () => {\n   const matrixData = useSelector((state) => state.matrix.data);\n   const averageValues = calculateAverageValues(matrixData);\n   const sumRow = averageValues\n      .reduce((sum, value) => sum + value, 0)\n      .toFixed(2);\n   const [showPercentageValue, setShowPercentageValue] = useState(false);\n   const Renderer = setCellRenderer(showPercentageValue, StaticCell);\n   const avgRowCells = averageValues.map((value, index) => (\n      <Renderer\n         className={className}\n         key={index}\n         value={value.toFixed(2)}\n         sumRow={sumRow}\n      />\n   ));\n\n   return (\n      <tr>\n         <StaticCell className={className} key=\"avg\" value=\"Avg\" />\n         {avgRowCells}\n         <SumCell\n            key=\"avg-sum\"\n            sumMouseEnterHandler={() => setShowPercentageValue(true)}\n            sumMouseLeaveHandler={() => setShowPercentageValue(false)}\n            value={sumRow}\n         />\n      </tr>\n   );\n};\n\nexport default AverageRow;\n"]},"metadata":{},"sourceType":"module"}