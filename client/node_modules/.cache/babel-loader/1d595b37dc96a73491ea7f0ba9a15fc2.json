{"ast":null,"code":"import _slicedToArray from\"/home/superproger/workspace/matrix-builder/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{useSelector}from\"react-redux\";import StaticCell from\"../CellRenderer/StaticCell\";import SumCell from\"../CellRenderer/SumCell\";import setCellRenderer from\"../setCellRenderer\";import calculateAverageValues from\"./calculateAverageValues\";var className=\"average-cell\";var AverageRow=function AverageRow(){var matrixData=useSelector(function(state){return state.matrix.data;});var averageValues=calculateAverageValues(matrixData);var sumRow=averageValues.reduce(function(sum,value){return sum+value;},0).toFixed(2);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showPercentageValue=_useState2[0],setShowPercentageValue=_useState2[1];var Renderer=setCellRenderer(showPercentageValue,StaticCell);var avgRowCells=averageValues.map(function(value,index){return/*#__PURE__*/React.createElement(Renderer,{className:className,key:index,value:value.toFixed(2),sumRow:sumRow});});return/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(StaticCell,{className:className,key:\"avg\",value:\"Avg\"}),avgRowCells,/*#__PURE__*/React.createElement(SumCell,{key:\"avg-sum\",sumMouseEnterHandler:function sumMouseEnterHandler(){return setShowPercentageValue(true);},sumMouseLeaveHandler:function sumMouseLeaveHandler(){return setShowPercentageValue(false);},value:sumRow}));};export default AverageRow;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/AverageRow/index.js"],"names":["React","useState","useSelector","StaticCell","SumCell","setCellRenderer","calculateAverageValues","className","AverageRow","matrixData","state","matrix","data","averageValues","sumRow","reduce","sum","value","toFixed","showPercentageValue","setShowPercentageValue","Renderer","avgRowCells","map","index"],"mappings":"wKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,MAAOC,CAAAA,UAAP,KAAuB,4BAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,yBAApB,CACA,MAAOC,CAAAA,eAAP,KAA4B,oBAA5B,CACA,MAAOC,CAAAA,sBAAP,KAAmC,0BAAnC,CAEA,GAAMC,CAAAA,SAAS,CAAG,cAAlB,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACtB,GAAMC,CAAAA,UAAU,CAAGP,WAAW,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAACC,MAAN,CAAaC,IAAxB,EAAD,CAA9B,CACA,GAAMC,CAAAA,aAAa,CAAGP,sBAAsB,CAACG,UAAD,CAA5C,CACA,GAAMK,CAAAA,MAAM,CAAGD,aAAa,CACxBE,MADW,CACJ,SAACC,GAAD,CAAMC,KAAN,QAAgBD,CAAAA,GAAG,CAAGC,KAAtB,EADI,CACyB,CADzB,EAEXC,OAFW,CAEH,CAFG,CAAf,CAHsB,cAMgCjB,QAAQ,CAAC,KAAD,CANxC,wCAMfkB,mBANe,eAMMC,sBANN,eAOtB,GAAMC,CAAAA,QAAQ,CAAGhB,eAAe,CAACc,mBAAD,CAAsBhB,UAAtB,CAAhC,CACA,GAAMmB,CAAAA,WAAW,CAAGT,aAAa,CAACU,GAAd,CAAkB,SAACN,KAAD,CAAQO,KAAR,qBACnC,oBAAC,QAAD,EACG,SAAS,CAAEjB,SADd,CAEG,GAAG,CAAEiB,KAFR,CAGG,KAAK,CAAEP,KAAK,CAACC,OAAN,CAAc,CAAd,CAHV,CAIG,MAAM,CAAEJ,MAJX,EADmC,EAAlB,CAApB,CASA,mBACG,2CACG,oBAAC,UAAD,EAAY,SAAS,CAAEP,SAAvB,CAAkC,GAAG,CAAC,KAAtC,CAA4C,KAAK,CAAC,KAAlD,EADH,CAEIe,WAFJ,cAGG,oBAAC,OAAD,EACG,GAAG,CAAC,SADP,CAEG,oBAAoB,CAAE,sCAAMF,CAAAA,sBAAsB,CAAC,IAAD,CAA5B,EAFzB,CAGG,oBAAoB,CAAE,sCAAMA,CAAAA,sBAAsB,CAAC,KAAD,CAA5B,EAHzB,CAIG,KAAK,CAAEN,MAJV,EAHH,CADH,CAYF,CA7BD,CA+BA,cAAeN,CAAAA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport StaticCell from \"../CellRenderer/StaticCell\";\nimport SumCell from \"../CellRenderer/SumCell\";\nimport setCellRenderer from \"../setCellRenderer\";\nimport calculateAverageValues from \"./calculateAverageValues\";\n\nconst className = \"average-cell\";\n\nconst AverageRow = () => {\n   const matrixData = useSelector((state) => state.matrix.data);\n   const averageValues = calculateAverageValues(matrixData);\n   const sumRow = averageValues\n      .reduce((sum, value) => sum + value, 0)\n      .toFixed(2);\n   const [showPercentageValue, setShowPercentageValue] = useState(false);\n   const Renderer = setCellRenderer(showPercentageValue, StaticCell);\n   const avgRowCells = averageValues.map((value, index) => (\n      <Renderer\n         className={className}\n         key={index}\n         value={value.toFixed(2)}\n         sumRow={sumRow}\n      />\n   ));\n\n   return (\n      <tr>\n         <StaticCell className={className} key=\"avg\" value=\"Avg\" />\n         {avgRowCells}\n         <SumCell\n            key=\"avg-sum\"\n            sumMouseEnterHandler={() => setShowPercentageValue(true)}\n            sumMouseLeaveHandler={() => setShowPercentageValue(false)}\n            value={sumRow}\n         />\n      </tr>\n   );\n};\n\nexport default AverageRow;\n"]},"metadata":{},"sourceType":"module"}