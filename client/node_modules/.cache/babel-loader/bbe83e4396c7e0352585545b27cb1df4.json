{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/TableRow/index.js\";\nimport React, { useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { removeRow } from \"../../../../../redux/actions\";\nimport CrossButton from \"../../../../CrossButton\";\nimport IncrementCell from \"./TableCell/IncrementCell\";\nimport StaticCell from \"./TableCell/StaticCell\";\nimport SumCell from \"./TableCell/SumCell\";\n\nconst showPercentage = ref => {\n  console.log(ref.style);\n};\n\nconst TableRow = ({\n  rowCount,\n  data\n}) => {\n  const cellRef = useRef(null);\n  const sumRow = data.map(data => data.value).reduce((sum = 0, value) => sum + value);\n  const rowLabel = /*#__PURE__*/React.createElement(StaticCell, {\n    key: rowCount,\n    value: rowCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  });\n  const rowCells = data.map(cellData => {\n    // const percentOfSum = Math.round((cellData.value * 100) / sumRow);\n    return /*#__PURE__*/React.createElement(IncrementCell, {\n      key: cellData.id,\n      id: cellData.id,\n      value: cellData.value // percent={percentOfSum}\n      ,\n      ref: cellRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 10\n      }\n    });\n  });\n  const sumRowCell = /*#__PURE__*/React.createElement(SumCell, {\n    key: sumRow,\n    value: sumRow,\n    hoverHandler: () => showPercentage(cellRef),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  });\n  const cells = [rowLabel, ...rowCells, sumRowCell];\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, cells, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(CrossButton, {\n    buttonClickHandler: () => dispatch(removeRow(rowCount)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default TableRow;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/TableRow/index.js"],"names":["React","useRef","useDispatch","removeRow","CrossButton","IncrementCell","StaticCell","SumCell","showPercentage","ref","console","log","style","TableRow","rowCount","data","cellRef","sumRow","map","value","reduce","sum","rowLabel","rowCells","cellData","id","sumRowCell","cells","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,MAAMC,cAAc,GAAIC,GAAD,IAAS;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,KAAhB;AACD,CAFD;;AAIA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AACtC,QAAMC,OAAO,GAAGf,MAAM,CAAC,IAAD,CAAtB;AACA,QAAMgB,MAAM,GAAGF,IAAI,CACfG,GADW,CACNH,IAAD,IAAUA,IAAI,CAACI,KADR,EAEXC,MAFW,CAEJ,CAACC,GAAG,GAAG,CAAP,EAAUF,KAAV,KAAoBE,GAAG,GAAGF,KAFtB,CAAf;AAGA,QAAMG,QAAQ,gBAAG,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAER,QAAjB;AAA2B,IAAA,KAAK,EAAEA,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjB;AACA,QAAMS,QAAQ,GAAGR,IAAI,CAACG,GAAL,CAAUM,QAAD,IAAc;AACrC;AACA,wBACG,oBAAC,aAAD;AACG,MAAA,GAAG,EAAEA,QAAQ,CAACC,EADjB;AAEG,MAAA,EAAE,EAAED,QAAQ,CAACC,EAFhB;AAGG,MAAA,KAAK,EAAED,QAAQ,CAACL,KAHnB,CAIG;AAJH;AAKG,MAAA,GAAG,EAAEH,OALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH;AASF,GAXgB,CAAjB;AAYA,QAAMU,UAAU,gBACb,oBAAC,OAAD;AACG,IAAA,GAAG,EAAET,MADR;AAEG,IAAA,KAAK,EAAEA,MAFV;AAGG,IAAA,YAAY,EAAE,MAAMT,cAAc,CAACQ,OAAD,CAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH;AAOA,QAAMW,KAAK,GAAG,CAACL,QAAD,EAAW,GAAGC,QAAd,EAAwBG,UAAxB,CAAd;AACA,QAAME,QAAQ,GAAG1B,WAAW,EAA5B;AAEA,sBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIyB,KADJ,eAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,WAAD;AACG,IAAA,kBAAkB,EAAE,MAAMC,QAAQ,CAACzB,SAAS,CAACW,QAAD,CAAV,CADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAFH,CADH;AAUF,CAtCD;;AAwCA,eAAeD,QAAf","sourcesContent":["import React, { useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { removeRow } from \"../../../../../redux/actions\";\nimport CrossButton from \"../../../../CrossButton\";\nimport IncrementCell from \"./TableCell/IncrementCell\";\nimport StaticCell from \"./TableCell/StaticCell\";\nimport SumCell from \"./TableCell/SumCell\";\n\nconst showPercentage = (ref) => {\n  console.log(ref.style)\n};\n\nconst TableRow = ({ rowCount, data }) => {\n   const cellRef = useRef(null);\n   const sumRow = data\n      .map((data) => data.value)\n      .reduce((sum = 0, value) => sum + value);\n   const rowLabel = <StaticCell key={rowCount} value={rowCount} />;\n   const rowCells = data.map((cellData) => {\n      // const percentOfSum = Math.round((cellData.value * 100) / sumRow);\n      return (\n         <IncrementCell\n            key={cellData.id}\n            id={cellData.id}\n            value={cellData.value}\n            // percent={percentOfSum}\n            ref={cellRef}\n         />\n      );\n   });\n   const sumRowCell = (\n      <SumCell\n         key={sumRow}\n         value={sumRow}\n         hoverHandler={() => showPercentage(cellRef)}\n      />\n   );\n   const cells = [rowLabel, ...rowCells, sumRowCell];\n   const dispatch = useDispatch();\n\n   return (\n      <tr>\n         {cells}\n         <td>\n            <CrossButton\n               buttonClickHandler={() => dispatch(removeRow(rowCount))}\n            />\n         </td>\n      </tr>\n   );\n};\n\nexport default TableRow;\n"]},"metadata":{},"sourceType":"module"}