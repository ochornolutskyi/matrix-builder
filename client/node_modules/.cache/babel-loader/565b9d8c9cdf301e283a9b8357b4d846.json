{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/AverageRow/index.js\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport StaticCell from \"../TableRow/CellRenderer/StaticCell\";\nimport SumCell from \"../TableRow/CellRenderer/SumCell\";\n\nconst AverageRow = () => {\n  const data = useSelector(state => state.matrix.data);\n  const className = \"avarage-cell\";\n  const rowsValues = data.map(item => item.map(row => row.value)); //current row values and next row values return the sum of values by equal index\n\n  const averageValues = rowsValues.reduce((currentRow, nextRow) => currentRow.map((value, index) => value + nextRow[index])).map(value => value / data.length);\n  const sumRow = rowsValues.flat().reduce((sum = 0, value) => sum + value, []);\n  const avgRowLabel = /*#__PURE__*/React.createElement(StaticCell, {\n    className: className,\n    key: \"avg\",\n    value: \"Avg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  });\n  const avgRowCells = averageValues.map((value, index) => /*#__PURE__*/React.createElement(StaticCell, {\n    className: className,\n    key: index,\n    value: value.toFixed(2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }));\n  const avgRowSum = /*#__PURE__*/React.createElement(SumCell, {\n    key: \"avg-sum\",\n    className: className,\n    value: sumRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  });\n  const cells = [avgRowLabel, ...avgRowCells, avgRowSum];\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, cells);\n};\n\nexport default AverageRow;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/AverageRow/index.js"],"names":["React","useSelector","StaticCell","SumCell","AverageRow","data","state","matrix","className","rowsValues","map","item","row","value","averageValues","reduce","currentRow","nextRow","index","length","sumRow","flat","sum","avgRowLabel","avgRowCells","toFixed","avgRowSum","cells"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,OAAP,MAAoB,kCAApB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACtB,QAAMC,IAAI,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaF,IAAzB,CAAxB;AACA,QAAMG,SAAS,GAAG,cAAlB;AACA,QAAMC,UAAU,GAAGJ,IAAI,CAACK,GAAL,CAAUC,IAAD,IAAUA,IAAI,CAACD,GAAL,CAAUE,GAAD,IAASA,GAAG,CAACC,KAAtB,CAAnB,CAAnB,CAHsB,CAItB;;AACA,QAAMC,aAAa,GAAGL,UAAU,CAC5BM,MADkB,CACX,CAACC,UAAD,EAAaC,OAAb,KACLD,UAAU,CAACN,GAAX,CAAe,CAACG,KAAD,EAAQK,KAAR,KAAkBL,KAAK,GAAGI,OAAO,CAACC,KAAD,CAAhD,CAFgB,EAIlBR,GAJkB,CAIbG,KAAD,IAAWA,KAAK,GAAGR,IAAI,CAACc,MAJV,CAAtB;AAKA,QAAMC,MAAM,GAAGX,UAAU,CAACY,IAAX,GAAkBN,MAAlB,CAAyB,CAACO,GAAG,GAAG,CAAP,EAAUT,KAAV,KAAoBS,GAAG,GAAGT,KAAnD,EAA0D,EAA1D,CAAf;AAEA,QAAMU,WAAW,gBACd,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEf,SAAvB;AAAkC,IAAA,GAAG,EAAC,KAAtC;AAA4C,IAAA,KAAK,EAAC,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH;AAGA,QAAMgB,WAAW,GAAGV,aAAa,CAACJ,GAAd,CAAkB,CAACG,KAAD,EAAQK,KAAR,kBACnC,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEV,SAAvB;AAAkC,IAAA,GAAG,EAAEU,KAAvC;AAA8C,IAAA,KAAK,EAAEL,KAAK,CAACY,OAAN,CAAc,CAAd,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADiB,CAApB;AAGA,QAAMC,SAAS,gBACZ,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAC,SAAb;AAAuB,IAAA,SAAS,EAAElB,SAAlC;AAA6C,IAAA,KAAK,EAAEY,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH;AAGA,QAAMO,KAAK,GAAG,CAACJ,WAAD,EAAc,GAAGC,WAAjB,EAA8BE,SAA9B,CAAd;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,KAAL,CAAP;AACF,CAxBD;;AA0BA,eAAevB,UAAf","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport StaticCell from \"../TableRow/CellRenderer/StaticCell\";\nimport SumCell from \"../TableRow/CellRenderer/SumCell\";\n\nconst AverageRow = () => {\n   const data = useSelector((state) => state.matrix.data);\n   const className = \"avarage-cell\";\n   const rowsValues = data.map((item) => item.map((row) => row.value));\n   //current row values and next row values return the sum of values by equal index\n   const averageValues = rowsValues\n      .reduce((currentRow, nextRow) =>\n         currentRow.map((value, index) => value + nextRow[index])\n      )\n      .map((value) => value / data.length);\n   const sumRow = rowsValues.flat().reduce((sum = 0, value) => sum + value, []);\n\n   const avgRowLabel = (\n      <StaticCell className={className} key=\"avg\" value=\"Avg\" />\n   );\n   const avgRowCells = averageValues.map((value, index) => (\n      <StaticCell className={className} key={index} value={value.toFixed(2)} />\n   ));\n   const avgRowSum = (\n      <SumCell key=\"avg-sum\" className={className} value={sumRow} />\n   );\n   const cells = [avgRowLabel, ...avgRowCells, avgRowSum];\n\n   return <tr>{cells}</tr>;\n};\n\nexport default AverageRow;\n"]},"metadata":{},"sourceType":"module"}