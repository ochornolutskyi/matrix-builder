{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/Table/TableBody/TableRow/index.js\";\nimport React, { useMemo } from \"react\";\nimport CrossButton from \"../../../CrossButton\";\nimport IncrementCell from \"./TableCell/IncrementCell\";\nimport StaticCell from \"./TableCell/StaticCell\";\n\nconst TableRow = ({\n  rowCount,\n  data\n}) => {\n  const rowLabel = /*#__PURE__*/React.createElement(StaticCell, {\n    key: rowCount,\n    value: rowCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 21\n    }\n  });\n  const rowCells = data.map(cellData => /*#__PURE__*/React.createElement(IncrementCell, {\n    key: cellData.id,\n    id: cellData.id,\n    value: cellData.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }));\n  const sumRowCell = useMemo(() => {\n    const sumRow = data.map(data => data.value).reduce((sum = 0, value) => sum + value);\n    return /*#__PURE__*/React.createElement(StaticCell, {\n      key: sumRow,\n      value: sumRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 14\n      }\n    });\n  }, [rowCells]);\n  const cells = [rowLabel, ...rowCells, sumRowCell];\n\n  const removeRow = target => {\n    console.log(target);\n  };\n\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, cells, /*#__PURE__*/React.createElement(CrossButton, {\n    buttonClickHandler: event => removeRow(event.target),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }\n  }));\n};\n\nexport default TableRow;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/Table/TableBody/TableRow/index.js"],"names":["React","useMemo","CrossButton","IncrementCell","StaticCell","TableRow","rowCount","data","rowLabel","rowCells","map","cellData","id","value","sumRowCell","sumRow","reduce","sum","cells","removeRow","target","console","log","event"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AACtC,QAAMC,QAAQ,gBAAG,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEF,QAAjB;AAA2B,IAAA,KAAK,EAAEA,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjB;AACA,QAAMG,QAAQ,GAAGF,IAAI,CAACG,GAAL,CAAUC,QAAD,iBACvB,oBAAC,aAAD;AACG,IAAA,GAAG,EAAEA,QAAQ,CAACC,EADjB;AAEG,IAAA,EAAE,EAAED,QAAQ,CAACC,EAFhB;AAGG,IAAA,KAAK,EAAED,QAAQ,CAACE,KAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,CAAjB;AAOA,QAAMC,UAAU,GAAGb,OAAO,CAAC,MAAM;AAC9B,UAAMc,MAAM,GAAGR,IAAI,CACfG,GADW,CACNH,IAAD,IAAUA,IAAI,CAACM,KADR,EAEXG,MAFW,CAEJ,CAACC,GAAG,GAAG,CAAP,EAAUJ,KAAV,KAAoBI,GAAG,GAAGJ,KAFtB,CAAf;AAGA,wBAAO,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAEE,MAAjB;AAAyB,MAAA,KAAK,EAAEA,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACF,GALyB,EAKvB,CAACN,QAAD,CALuB,CAA1B;AAMA,QAAMS,KAAK,GAAG,CAACV,QAAD,EAAW,GAAGC,QAAd,EAAwBK,UAAxB,CAAd;;AAEA,QAAMK,SAAS,GAAIC,MAAD,IAAY;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACF,GAFD;;AAIA,sBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIF,KADJ,eAEG,oBAAC,WAAD;AAAa,IAAA,kBAAkB,EAAGK,KAAD,IAAWJ,SAAS,CAACI,KAAK,CAACH,MAAP,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,CADH;AAMF,CA3BD;;AA6BA,eAAef,QAAf","sourcesContent":["import React, { useMemo } from \"react\";\nimport CrossButton from \"../../../CrossButton\";\nimport IncrementCell from \"./TableCell/IncrementCell\";\nimport StaticCell from \"./TableCell/StaticCell\";\n\nconst TableRow = ({ rowCount, data }) => {\n   const rowLabel = <StaticCell key={rowCount} value={rowCount} />;\n   const rowCells = data.map((cellData) => (\n      <IncrementCell\n         key={cellData.id}\n         id={cellData.id}\n         value={cellData.value}\n      />\n   ));\n   const sumRowCell = useMemo(() => {\n      const sumRow = data\n         .map((data) => data.value)\n         .reduce((sum = 0, value) => sum + value);\n      return <StaticCell key={sumRow} value={sumRow} />;\n   }, [rowCells]);\n   const cells = [rowLabel, ...rowCells, sumRowCell];\n\n   const removeRow = (target) => {\n      console.log(target)\n   };\n\n   return (\n      <tr>\n         {cells}\n         <CrossButton buttonClickHandler={(event) => removeRow(event.target)} />\n      </tr>\n   );\n};\n\nexport default TableRow;\n"]},"metadata":{},"sourceType":"module"}