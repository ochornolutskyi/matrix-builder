{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/RowFragment/CellRenderer/IncrementCell.js\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { incrementCell, resetNearestIds, setNearestIds } from \"../../../../../../redux/actions\";\n\nconst IncrementCell = ({\n  id,\n  value\n}) => {\n  const nearestIds = useSelector(state => state.matrix.nearestIds);\n  const dispatch = useDispatch();\n  const isSameValue = !!nearestIds.sameValueIds.find(sameValueId => sameValueId === id);\n  const isNearestValue = !!nearestIds.ids.find(nearestId => nearestId === id);\n  const className = isSameValue ? \"same-value\" : isNearestValue ? \"nearest-value\" : null;\n  return /*#__PURE__*/React.createElement(\"td\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onMouseEnter: () => dispatch(setNearestIds(id)),\n    onMouseLeave: () => dispatch(resetNearestIds()),\n    onClick: () => dispatch(incrementCell(id, value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }\n  }, value));\n};\n\nexport default IncrementCell;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/RowFragment/CellRenderer/IncrementCell.js"],"names":["React","useDispatch","useSelector","incrementCell","resetNearestIds","setNearestIds","IncrementCell","id","value","nearestIds","state","matrix","dispatch","isSameValue","sameValueIds","find","sameValueId","isNearestValue","ids","nearestId","className"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACGC,aADH,EAEGC,eAFH,EAGGC,aAHH,QAIO,iCAJP;;AAMA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAD,KAAmB;AACtC,QAAMC,UAAU,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaF,UAAzB,CAA9B;AACA,QAAMG,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,WAAW,GAAG,CAAC,CAACJ,UAAU,CAACK,YAAX,CAAwBC,IAAxB,CAClBC,WAAD,IAAiBA,WAAW,KAAKT,EADd,CAAtB;AAGA,QAAMU,cAAc,GAAG,CAAC,CAACR,UAAU,CAACS,GAAX,CAAeH,IAAf,CACrBI,SAAD,IAAeA,SAAS,KAAKZ,EADP,CAAzB;AAGA,QAAMa,SAAS,GAAGP,WAAW,GACxB,YADwB,GAExBI,cAAc,GACd,eADc,GAEd,IAJL;AAKA,sBACG;AAAI,IAAA,SAAS,EAAEG,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AACG,IAAA,YAAY,EAAE,MAAMR,QAAQ,CAACP,aAAa,CAACE,EAAD,CAAd,CAD/B;AAEG,IAAA,YAAY,EAAE,MAAMK,QAAQ,CAACR,eAAe,EAAhB,CAF/B;AAGG,IAAA,OAAO,EAAE,MAAMQ,QAAQ,CAACT,aAAa,CAACI,EAAD,EAAKC,KAAL,CAAd,CAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKIA,KALJ,CADH,CADH;AAWF,CAzBD;;AA2BA,eAAeF,aAAf","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n   incrementCell,\n   resetNearestIds,\n   setNearestIds,\n} from \"../../../../../../redux/actions\";\n\nconst IncrementCell = ({ id, value }) => {\n   const nearestIds = useSelector((state) => state.matrix.nearestIds);\n   const dispatch = useDispatch();\n   const isSameValue = !!nearestIds.sameValueIds.find(\n      (sameValueId) => sameValueId === id\n   );\n   const isNearestValue = !!nearestIds.ids.find(\n      (nearestId) => nearestId === id\n   );\n   const className = isSameValue\n      ? \"same-value\"\n      : isNearestValue\n      ? \"nearest-value\"\n      : null;\n   return (\n      <td className={className}>\n         <div\n            onMouseEnter={() => dispatch(setNearestIds(id))}\n            onMouseLeave={() => dispatch(resetNearestIds())}\n            onClick={() => dispatch(incrementCell(id, value))}\n         >\n            {value}\n         </div>\n      </td>\n   );\n};\n\nexport default IncrementCell;\n"]},"metadata":{},"sourceType":"module"}