{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/Table/TableBody/TableRow/index.js\";\nimport React, { useMemo } from \"react\";\nimport TableCell from \"./TableCell/TableCell\";\nimport StaticCell from \"./TableCell/StaticCell\";\n\nconst TableRow = ({\n  data\n}) => {\n  let matrixCells = data.map((cellData, index) => {\n    if (cellData.rowNumber) {\n      return /*#__PURE__*/React.createElement(StaticCell, {\n        key: index,\n        value: cellData.rowNumber,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 17\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(TableCell, {\n      key: index,\n      id: cellData.id,\n      value: cellData.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 14\n      }\n    });\n  });\n  const sumCell = useMemo(() => {\n    return data.map(data => data.value).reduce((sum = 0, value) => sum + value);\n  }, [matrixCells]);\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, matrixCells, /*#__PURE__*/React.createElement(StaticCell, {\n    value: sumCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 10\n    }\n  }));\n};\n\nexport default TableRow;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/Table/TableBody/TableRow/index.js"],"names":["React","useMemo","TableCell","StaticCell","TableRow","data","matrixCells","map","cellData","index","rowNumber","id","value","sumCell","reduce","sum"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC5B,MAAIC,WAAW,GAAGD,IAAI,CAACE,GAAL,CAAS,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC7C,QAAID,QAAQ,CAACE,SAAb,EAAwB;AACrB,0BAAO,oBAAC,UAAD;AAAY,QAAA,GAAG,EAAED,KAAjB;AAAwB,QAAA,KAAK,EAAED,QAAQ,CAACE,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACF;;AACD,wBAAO,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAED,KAAhB;AAAuB,MAAA,EAAE,EAAED,QAAQ,CAACG,EAApC;AAAwC,MAAA,KAAK,EAAEH,QAAQ,CAACI,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACF,GALiB,CAAlB;AAOA,QAAMC,OAAO,GAAGZ,OAAO,CAAC,MAAM;AAC3B,WAAOI,IAAI,CACPE,GADG,CACEF,IAAD,IAAUA,IAAI,CAACO,KADhB,EAEHE,MAFG,CAEI,CAACC,GAAG,GAAG,CAAP,EAAUH,KAAV,KAAoBG,GAAG,GAAGH,KAF9B,CAAP;AAGF,GAJsB,EAIpB,CAACN,WAAD,CAJoB,CAAvB;AAMA,sBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIA,WADJ,eAEG,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEO,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,CADH;AAMF,CApBD;;AAsBA,eAAeT,QAAf","sourcesContent":["import React, { useMemo } from \"react\";\nimport TableCell from \"./TableCell/TableCell\";\nimport StaticCell from \"./TableCell/StaticCell\";\n\nconst TableRow = ({ data }) => {\n   let matrixCells = data.map((cellData, index) => {\n      if (cellData.rowNumber) {\n         return <StaticCell key={index} value={cellData.rowNumber} />;\n      }\n      return <TableCell key={index} id={cellData.id} value={cellData.value} />;\n   });\n\n   const sumCell = useMemo(() => {\n      return data\n         .map((data) => data.value)\n         .reduce((sum = 0, value) => sum + value);\n   }, [matrixCells]);\n\n   return (\n      <tr>\n         {matrixCells}\n         <StaticCell value={sumCell} />\n      </tr>\n   );\n};\n\nexport default TableRow;\n"]},"metadata":{},"sourceType":"module"}