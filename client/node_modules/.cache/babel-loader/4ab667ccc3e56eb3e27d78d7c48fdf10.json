{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/TableRow/TableCell/CellRenderer/IncrementCell.js\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { incrementCell } from \"../../../../../../../redux/actions\";\n\nconst IncrementCell = ({\n  id,\n  value,\n  cellMouseEnter,\n  isNearest\n}) => {\n  const dispatch = useDispatch();\n  let style = isNearest ? {\n    backgroundColor: \"aqua\"\n  } : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: style,\n    onMouseEnter: cellMouseEnter,\n    onMouseLeave: () => cellMouseLeave(style),\n    onClick: () => dispatch(incrementCell(id, value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, value);\n};\n\nexport default IncrementCell;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/TableRow/TableCell/CellRenderer/IncrementCell.js"],"names":["React","useDispatch","incrementCell","IncrementCell","id","value","cellMouseEnter","isNearest","dispatch","style","backgroundColor","cellMouseLeave"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT,QAA8B,oCAA9B;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,KAAN;AAAaC,EAAAA,cAAb;AAA6BC,EAAAA;AAA7B,CAAD,KAA8C;AACjE,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,MAAIQ,KAAK,GAAGF,SAAS,GAAG;AAAEG,IAAAA,eAAe,EAAE;AAAnB,GAAH,GAAiC,IAAtD;AAEA,sBACG;AACG,IAAA,KAAK,EAAED,KADV;AAEG,IAAA,YAAY,EAAEH,cAFjB;AAGG,IAAA,YAAY,EAAE,MAAMK,cAAc,CAACF,KAAD,CAHrC;AAIG,IAAA,OAAO,EAAE,MAAMD,QAAQ,CAACN,aAAa,CAACE,EAAD,EAAKC,KAAL,CAAd,CAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMIA,KANJ,CADH;AAUF,CAdD;;AAgBA,eAAeF,aAAf","sourcesContent":["import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { incrementCell } from \"../../../../../../../redux/actions\";\n\nconst IncrementCell = ({ id, value, cellMouseEnter, isNearest }) => {\n   const dispatch = useDispatch();\n   let style = isNearest ? { backgroundColor: \"aqua\" } : null;\n\n   return (\n      <div\n         style={style}\n         onMouseEnter={cellMouseEnter}\n         onMouseLeave={() => cellMouseLeave(style)}\n         onClick={() => dispatch(incrementCell(id, value))}\n      >\n         {value}\n      </div>\n   );\n};\n\nexport default IncrementCell;\n"]},"metadata":{},"sourceType":"module"}