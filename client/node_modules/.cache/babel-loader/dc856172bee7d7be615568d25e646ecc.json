{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/TableRow/TableCell/CellRenderer/IncrementCell.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { incrementCell, resetNearestIds, setNearestIds } from \"../../../../../../../redux/actions\";\n\nconst IncrementCell = ({\n  id,\n  value,\n  cellsSetting\n}) => {\n  const nearestIds = useSelector(state => state.matrix.nearestIds);\n  const dispatch = useDispatch();\n  const isNearest = nearestIds.find(nearestId => nearestId === id) ? true : false;\n  useEffect(() => {\n    if (isNearest) {\n      setStyle({\n        backgroundColor: \"aqua\"\n      });\n    }\n  }, [nearestIds]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: style,\n    onMouseEnter: () => dispatch(setNearestIds(cellsSetting, value)),\n    onMouseLeave: () => dispatch(resetNearestIds()),\n    onClick: () => dispatch(incrementCell(id, value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, value);\n};\n\nexport default IncrementCell;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/TableRow/TableCell/CellRenderer/IncrementCell.js"],"names":["React","useEffect","useState","useDispatch","useSelector","incrementCell","resetNearestIds","setNearestIds","IncrementCell","id","value","cellsSetting","nearestIds","state","matrix","dispatch","isNearest","find","nearestId","setStyle","backgroundColor","style"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACGC,aADH,EAEGC,eAFH,EAGGC,aAHH,QAIO,oCAJP;;AAMA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,KAAN;AAAaC,EAAAA;AAAb,CAAD,KAAiC;AACpD,QAAMC,UAAU,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaF,UAAzB,CAA9B;AACA,QAAMG,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,SAAS,GAAGJ,UAAU,CAACK,IAAX,CAAiBC,SAAD,IAAeA,SAAS,KAAKT,EAA7C,IACb,IADa,GAEb,KAFL;AAIAR,EAAAA,SAAS,CAAC,MAAM;AACb,QAAIe,SAAJ,EAAe;AACZG,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OAAD,CAAR;AACF;AACH,GAJQ,EAIN,CAACR,UAAD,CAJM,CAAT;AAMA,sBACG;AACG,IAAA,KAAK,EAAES,KADV;AAEG,IAAA,YAAY,EAAE,MAAMN,QAAQ,CAACR,aAAa,CAACI,YAAD,EAAeD,KAAf,CAAd,CAF/B;AAGG,IAAA,YAAY,EAAE,MAAMK,QAAQ,CAACT,eAAe,EAAhB,CAH/B;AAIG,IAAA,OAAO,EAAE,MAAMS,QAAQ,CAACV,aAAa,CAACI,EAAD,EAAKC,KAAL,CAAd,CAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMIA,KANJ,CADH;AAUF,CAvBD;;AAyBA,eAAeF,aAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n   incrementCell,\n   resetNearestIds,\n   setNearestIds,\n} from \"../../../../../../../redux/actions\";\n\nconst IncrementCell = ({ id, value, cellsSetting }) => {\n   const nearestIds = useSelector((state) => state.matrix.nearestIds);\n   const dispatch = useDispatch();\n   const isNearest = nearestIds.find((nearestId) => nearestId === id)\n      ? true\n      : false;\n\n   useEffect(() => {\n      if (isNearest) {\n         setStyle({ backgroundColor: \"aqua\" });\n      }\n   }, [nearestIds]);\n\n   return (\n      <div\n         style={style}\n         onMouseEnter={() => dispatch(setNearestIds(cellsSetting, value))}\n         onMouseLeave={() => dispatch(resetNearestIds())}\n         onClick={() => dispatch(incrementCell(id, value))}\n      >\n         {value}\n      </div>\n   );\n};\n\nexport default IncrementCell;\n"]},"metadata":{},"sourceType":"module"}