{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/SettingsTable/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSettings } from \"../../redux/actions\";\nimport Button from \"../Button\";\nimport InputCounts from \"./InputCounts\";\n\nconst SettingsTable = () => {\n  const settings = useSelector(state => state.matrix.settings);\n  const dispatch = useDispatch();\n  const [rowsCount, setRowsCount] = useState(settings.rowsCount);\n  const [columnsCount, setColumnsCount] = useState(settings.columnsCount);\n  const [cellsCount, setCellsCount] = useState(settings.cellsCount);\n  useEffect(() => {\n    setRowsCount(settings.rowsCount);\n    setColumnsCount(settings.columnsCount);\n    setCellsCount(settings.cellsCount);\n  }, [settings]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settings-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 10\n    }\n  }, \"Welcome to Matrix Builder\"), /*#__PURE__*/React.createElement(InputCounts, {\n    id: \"rows\",\n    label: \"Set the rows count\",\n    value: rowsCount,\n    handleChange: event => setRowsCount(+event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(InputCounts, {\n    id: \"columns\",\n    label: \"Set the columns count\",\n    value: columnsCount,\n    handleChange: event => setColumnsCount(+event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(InputCounts, {\n    id: \"cells\",\n    label: \"Set the count of cells to show the nearest value\",\n    value: cellsCount,\n    handleChange: event => setCellsCount(+event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    buttonText: \"Apply settings of matrix\",\n    buttonClickHandler: () => dispatch(setSettings({\n      rowsCount,\n      columnsCount,\n      cellsCount\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }\n  }));\n};\n\nexport default SettingsTable;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/SettingsTable/index.js"],"names":["React","useEffect","useState","useDispatch","useSelector","setSettings","Button","InputCounts","SettingsTable","settings","state","matrix","dispatch","rowsCount","setRowsCount","columnsCount","setColumnsCount","cellsCount","setCellsCount","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AACzB,QAAMC,QAAQ,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaF,QAAzB,CAA5B;AACA,QAAMG,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAACO,QAAQ,CAACI,SAAV,CAA1C;AACA,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAACO,QAAQ,CAACM,YAAV,CAAhD;AACA,QAAM,CAACE,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAACO,QAAQ,CAACQ,UAAV,CAA5C;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACba,IAAAA,YAAY,CAACL,QAAQ,CAACI,SAAV,CAAZ;AACAG,IAAAA,eAAe,CAACP,QAAQ,CAACM,YAAV,CAAf;AACAG,IAAAA,aAAa,CAACT,QAAQ,CAACQ,UAAV,CAAb;AACF,GAJQ,EAIN,CAACR,QAAD,CAJM,CAAT;AAMA,sBACG;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADH,eAEG,oBAAC,WAAD;AACG,IAAA,EAAE,EAAC,MADN;AAEG,IAAA,KAAK,EAAC,oBAFT;AAGG,IAAA,KAAK,EAAEI,SAHV;AAIG,IAAA,YAAY,EAAGM,KAAD,IAAWL,YAAY,CAAC,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAf,CAJxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,eAQG,oBAAC,WAAD;AACG,IAAA,EAAE,EAAC,SADN;AAEG,IAAA,KAAK,EAAC,uBAFT;AAGG,IAAA,KAAK,EAAEN,YAHV;AAIG,IAAA,YAAY,EAAGI,KAAD,IAAWH,eAAe,CAAC,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAf,CAJ3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARH,eAcG,oBAAC,WAAD;AACG,IAAA,EAAE,EAAC,OADN;AAEG,IAAA,KAAK,EAAC,kDAFT;AAGG,IAAA,KAAK,EAAEJ,UAHV;AAIG,IAAA,YAAY,EAAGE,KAAD,IAAWD,aAAa,CAAC,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAf,CAJzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdH,eAoBG,oBAAC,MAAD;AACG,IAAA,UAAU,EAAC,0BADd;AAEG,IAAA,kBAAkB,EAAE,MACjBT,QAAQ,CAACP,WAAW,CAAC;AAAEQ,MAAAA,SAAF;AAAaE,MAAAA,YAAb;AAA2BE,MAAAA;AAA3B,KAAD,CAAZ,CAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBH,CADH;AA6BF,CA1CD;;AA4CA,eAAeT,aAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSettings } from \"../../redux/actions\";\nimport Button from \"../Button\";\nimport InputCounts from \"./InputCounts\";\n\nconst SettingsTable = () => {\n   const settings = useSelector((state) => state.matrix.settings);\n   const dispatch = useDispatch();\n   const [rowsCount, setRowsCount] = useState(settings.rowsCount);\n   const [columnsCount, setColumnsCount] = useState(settings.columnsCount);\n   const [cellsCount, setCellsCount] = useState(settings.cellsCount);\n\n   useEffect(() => {\n      setRowsCount(settings.rowsCount);\n      setColumnsCount(settings.columnsCount);\n      setCellsCount(settings.cellsCount);\n   }, [settings]);\n\n   return (\n      <div className=\"settings-table\">\n         <h1>Welcome to Matrix Builder</h1>\n         <InputCounts\n            id=\"rows\"\n            label=\"Set the rows count\"\n            value={rowsCount}\n            handleChange={(event) => setRowsCount(+event.target.value)}\n         />\n         <InputCounts\n            id=\"columns\"\n            label=\"Set the columns count\"\n            value={columnsCount}\n            handleChange={(event) => setColumnsCount(+event.target.value)}\n         />\n         <InputCounts\n            id=\"cells\"\n            label=\"Set the count of cells to show the nearest value\"\n            value={cellsCount}\n            handleChange={(event) => setCellsCount(+event.target.value)}\n         />\n         <Button\n            buttonText=\"Apply settings of matrix\"\n            buttonClickHandler={() =>\n               dispatch(setSettings({ rowsCount, columnsCount, cellsCount }))\n            }\n         />\n      </div>\n   );\n};\n\nexport default SettingsTable;\n"]},"metadata":{},"sourceType":"module"}