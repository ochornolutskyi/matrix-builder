{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/Table/TableBody/TableRow/index.js\";\nimport React, { useMemo } from \"react\";\nimport IncrementCell from \"./TableCell/IncrementCell\";\nimport StaticCell from \"./TableCell/StaticCell\";\n\nconst TableRow = ({\n  rowCount,\n  data\n}) => {\n  const rowLabel = /*#__PURE__*/React.createElement(StaticCell, {\n    key: rowCount,\n    value: rowCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 21\n    }\n  });\n  const rowCells = data.map(cellData => /*#__PURE__*/React.createElement(IncrementCell, {\n    key: cellData.id,\n    id: cellData.id,\n    value: cellData.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }));\n  const sumRowCell = useMemo(() => {\n    const sumRow = data.map(data => data.value).reduce((sum = 0, value) => sum + value);\n    return /*#__PURE__*/React.createElement(StaticCell, {\n      key: sumRow,\n      value: sumRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 14\n      }\n    });\n  }, [rowCells]);\n  const cells = [rowLabel, ...rowCells, sumRowCell];\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }\n  }, cells, \" \", /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      width: \"10px\",\n      height: \"10px\",\n      backgroundColor: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default TableRow;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/Table/TableBody/TableRow/index.js"],"names":["React","useMemo","IncrementCell","StaticCell","TableRow","rowCount","data","rowLabel","rowCells","map","cellData","id","value","sumRowCell","sumRow","reduce","sum","cells","width","height","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AACtC,QAAMC,QAAQ,gBAAG,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEF,QAAjB;AAA2B,IAAA,KAAK,EAAEA,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjB;AACA,QAAMG,QAAQ,GAAGF,IAAI,CAACG,GAAL,CAAUC,QAAD,iBACvB,oBAAC,aAAD;AACG,IAAA,GAAG,EAAEA,QAAQ,CAACC,EADjB;AAEG,IAAA,EAAE,EAAED,QAAQ,CAACC,EAFhB;AAGG,IAAA,KAAK,EAAED,QAAQ,CAACE,KAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,CAAjB;AAOA,QAAMC,UAAU,GAAGZ,OAAO,CAAC,MAAM;AAC9B,UAAMa,MAAM,GAAGR,IAAI,CACfG,GADW,CACNH,IAAD,IAAUA,IAAI,CAACM,KADR,EAEXG,MAFW,CAEJ,CAACC,GAAG,GAAG,CAAP,EAAUJ,KAAV,KAAoBI,GAAG,GAAGJ,KAFtB,CAAf;AAGA,wBAAO,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAEE,MAAjB;AAAyB,MAAA,KAAK,EAAEA,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACF,GALyB,EAKvB,CAACN,QAAD,CALuB,CAA1B;AAMA,QAAMS,KAAK,GAAG,CAACV,QAAD,EAAW,GAAGC,QAAd,EAAwBK,UAAxB,CAAd;AAEA,sBACG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACII,KADJ,EACW,GADX,eAEG;AACG,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE,MAAzB;AAAiCC,MAAAA,eAAe,EAAE;AAAlD,KADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,CADH,CADH;AAUF,CA3BD;;AA6BA,eAAehB,QAAf","sourcesContent":["import React, { useMemo } from \"react\";\nimport IncrementCell from \"./TableCell/IncrementCell\";\nimport StaticCell from \"./TableCell/StaticCell\";\n\nconst TableRow = ({ rowCount, data }) => {\n   const rowLabel = <StaticCell key={rowCount} value={rowCount} />;\n   const rowCells = data.map((cellData) => (\n      <IncrementCell\n         key={cellData.id}\n         id={cellData.id}\n         value={cellData.value}\n      />\n   ));\n   const sumRowCell = useMemo(() => {\n      const sumRow = data\n         .map((data) => data.value)\n         .reduce((sum = 0, value) => sum + value);\n      return <StaticCell key={sumRow} value={sumRow} />;\n   }, [rowCells]);\n   const cells = [rowLabel, ...rowCells, sumRowCell];\n\n   return (\n      <React.Fragment>\n         <tr>\n            {cells}{\" \"}\n            <button\n               style={{ width: \"10px\", height: \"10px\", backgroundColor: \"red\" }}\n            />\n         </tr>\n      </React.Fragment>\n   );\n};\n\nexport default TableRow;\n"]},"metadata":{},"sourceType":"module"}