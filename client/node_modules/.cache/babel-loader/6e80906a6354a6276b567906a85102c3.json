{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/AverageRow/index.js\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport StaticCell from \"../CellRenderer/StaticCell\";\nimport RowFragment from \"../RowFragment\";\nimport calculateAverageValues from \"./calculateAverageValues\";\nconst className = \"average-cell\";\n\nconst AverageRow = () => {\n  /* const matrixData = useSelector((state) => state.matrix.data);\n  const averageRowValues = calculateAverageValues(matrixData);\n   const Renderer = setCellRenderer(showPercentageValue, StaticCell);\n  const avgRowCells = averageValues.map((value, index) => (\n     <RowFragment\n        key={index}\n        className={className}\n        label=\"Avg\"\n        rowValues={averageRowValues}\n     />\n  )); */\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  });\n};\n\nexport default AverageRow;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/AverageRow/index.js"],"names":["React","useSelector","StaticCell","RowFragment","calculateAverageValues","className","AverageRow"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AAEA,MAAMC,SAAS,GAAG,cAAlB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACtB;;;;;;;;;;;AAaA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACF,CAfD;;AAiBA,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport StaticCell from \"../CellRenderer/StaticCell\";\nimport RowFragment from \"../RowFragment\";\nimport calculateAverageValues from \"./calculateAverageValues\";\n\nconst className = \"average-cell\";\n\nconst AverageRow = () => {\n   /* const matrixData = useSelector((state) => state.matrix.data);\n   const averageRowValues = calculateAverageValues(matrixData);\n\n   const Renderer = setCellRenderer(showPercentageValue, StaticCell);\n   const avgRowCells = averageValues.map((value, index) => (\n      <RowFragment\n         key={index}\n         className={className}\n         label=\"Avg\"\n         rowValues={averageRowValues}\n      />\n   )); */\n\n   return <tr></tr>;\n};\n\nexport default AverageRow;\n"]},"metadata":{},"sourceType":"module"}