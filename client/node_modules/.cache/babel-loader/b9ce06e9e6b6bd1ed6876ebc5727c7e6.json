{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/SettingsTable/index.js\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSettings } from \"../../redux/actions\";\nimport Button from \"../Button\";\nimport InputCounts from \"./InputCounts\";\n\nconst SettingsTable = () => {\n  const matrixData = useSelector(state => state.matrix.data);\n  const dispatch = useDispatch();\n  const [rowsCount, setRowsCount] = useState(settings.rowsCount);\n  const [columnsCount, setColumnsCount] = useState(settings.columnsCount);\n  const [cellsCount, setCellsCount] = useState(settings.cellsCount);\n\n  const setTableRows = value => {\n    setRowsCount(+value);\n  };\n\n  const setTableColumns = value => {\n    setColumnsCount(+value);\n  };\n\n  const setTableCells = value => {\n    setColumnsCount(+value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settings-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }\n  }, \"Welcome to Matrix Builder\"), /*#__PURE__*/React.createElement(InputCounts, {\n    id: \"rows\",\n    label: \"Set the rows count\",\n    value: settings.rowsCount,\n    handleChange: event => setTableRows(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(InputCounts, {\n    id: \"columns\",\n    label: \"Set the columns count\",\n    value: settings.columnsCount,\n    handleChange: event => setTableColumns(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(InputCounts, {\n    id: \"cells\",\n    label: \"Set the count of cells to show the nearest value\",\n    value: settings.cellsCount,\n    handleChange: event => setTableCells(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    buttonText: \"Apply settings of matrix\",\n    buttonClickHandler: () => dispatch(setSettings({\n      rowsCount,\n      columnsCount,\n      cellsCount\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }\n  }));\n};\n\nexport default SettingsTable;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/SettingsTable/index.js"],"names":["React","useState","useDispatch","useSelector","setSettings","Button","InputCounts","SettingsTable","matrixData","state","matrix","data","dispatch","rowsCount","setRowsCount","settings","columnsCount","setColumnsCount","cellsCount","setCellsCount","setTableRows","value","setTableColumns","setTableCells","event","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AACzB,QAAMC,UAAU,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaC,IAAzB,CAA9B;AACA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAACc,QAAQ,CAACF,SAAV,CAA1C;AACA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAACc,QAAQ,CAACC,YAAV,CAAhD;AACA,QAAM,CAACE,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAACc,QAAQ,CAACG,UAAV,CAA5C;;AAEA,QAAME,YAAY,GAAIC,KAAD,IAAW;AAC7BP,IAAAA,YAAY,CAAC,CAACO,KAAF,CAAZ;AACF,GAFD;;AAGA,QAAMC,eAAe,GAAID,KAAD,IAAW;AAChCJ,IAAAA,eAAe,CAAC,CAACI,KAAF,CAAf;AAEF,GAHD;;AAIA,QAAME,aAAa,GAAIF,KAAD,IAAW;AAC9BJ,IAAAA,eAAe,CAAC,CAACI,KAAF,CAAf;AAEF,GAHD;;AAKA,sBACG;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADH,eAEG,oBAAC,WAAD;AACG,IAAA,EAAE,EAAC,MADN;AAEG,IAAA,KAAK,EAAC,oBAFT;AAGG,IAAA,KAAK,EAAEN,QAAQ,CAACF,SAHnB;AAIG,IAAA,YAAY,EAAGW,KAAD,IAAWJ,YAAY,CAACI,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAJxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,eAQG,oBAAC,WAAD;AACG,IAAA,EAAE,EAAC,SADN;AAEG,IAAA,KAAK,EAAC,uBAFT;AAGG,IAAA,KAAK,EAAEN,QAAQ,CAACC,YAHnB;AAIG,IAAA,YAAY,EAAGQ,KAAD,IAAWF,eAAe,CAACE,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAJ3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARH,eAcG,oBAAC,WAAD;AACG,IAAA,EAAE,EAAC,OADN;AAEG,IAAA,KAAK,EAAC,kDAFT;AAGG,IAAA,KAAK,EAAEN,QAAQ,CAACG,UAHnB;AAIG,IAAA,YAAY,EAAGM,KAAD,IAAWD,aAAa,CAACC,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAJzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdH,eAoBG,oBAAC,MAAD;AACG,IAAA,UAAU,EAAC,0BADd;AAEG,IAAA,kBAAkB,EAAE,MACjBT,QAAQ,CAACR,WAAW,CAAC;AAAES,MAAAA,SAAF;AAAaG,MAAAA,YAAb;AAA2BE,MAAAA;AAA3B,KAAD,CAAZ,CAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBH,CADH;AA6BF,CAhDD;;AAkDA,eAAeX,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSettings } from \"../../redux/actions\";\nimport Button from \"../Button\";\nimport InputCounts from \"./InputCounts\";\n\nconst SettingsTable = () => {\n   const matrixData = useSelector((state) => state.matrix.data);\n   const dispatch = useDispatch();\n   const [rowsCount, setRowsCount] = useState(settings.rowsCount);\n   const [columnsCount, setColumnsCount] = useState(settings.columnsCount);\n   const [cellsCount, setCellsCount] = useState(settings.cellsCount);\n\n   const setTableRows = (value) => {\n      setRowsCount(+value);\n   };\n   const setTableColumns = (value) => {\n      setColumnsCount(+value);\n\n   };\n   const setTableCells = (value) => {\n      setColumnsCount(+value);\n\n   };\n\n   return (\n      <div className=\"settings-table\">\n         <h1>Welcome to Matrix Builder</h1>\n         <InputCounts\n            id=\"rows\"\n            label=\"Set the rows count\"\n            value={settings.rowsCount}\n            handleChange={(event) => setTableRows(event.target.value)}\n         />\n         <InputCounts\n            id=\"columns\"\n            label=\"Set the columns count\"\n            value={settings.columnsCount}\n            handleChange={(event) => setTableColumns(event.target.value)}\n         />\n         <InputCounts\n            id=\"cells\"\n            label=\"Set the count of cells to show the nearest value\"\n            value={settings.cellsCount}\n            handleChange={(event) => setTableCells(event.target.value)}\n         />\n         <Button\n            buttonText=\"Apply settings of matrix\"\n            buttonClickHandler={() =>\n               dispatch(setSettings({ rowsCount, columnsCount, cellsCount }))\n            }\n         />\n      </div>\n   );\n};\n\nexport default SettingsTable;\n"]},"metadata":{},"sourceType":"module"}