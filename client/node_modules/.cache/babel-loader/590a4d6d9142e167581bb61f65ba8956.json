{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/Table/TableBody/TableRow/index.js\";\nimport React, { useEffect } from \"react\";\nimport TableCell from \"./TableCell/TabeCell\";\nimport NumerableCell from \"./TableCell/NumerableCell\";\n\nconst TableRow = ({\n  data\n}) => {\n  let cells = data.map((cellData, index) => {\n    if (cellData.rowNumber) {\n      return /*#__PURE__*/React.createElement(NumerableCell, {\n        key: index,\n        value: cellData.rowNumber,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 17\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(TableCell, {\n      key: index,\n      value: cellData.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 14\n      }\n    });\n  });\n  useEffect(() => {\n    const rowValues = data.filter(cellData => cellData.value).map(data => data.value).reduce((sum = 0, value) => sum + value); // const rowSum = rowValues;\n\n    console.log(rowValues);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, cells);\n};\n\nexport default TableRow;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/Table/TableBody/TableRow/index.js"],"names":["React","useEffect","TableCell","NumerableCell","TableRow","data","cells","map","cellData","index","rowNumber","value","rowValues","filter","reduce","sum","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC5B,MAAIC,KAAK,GAAGD,IAAI,CAACE,GAAL,CAAS,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACvC,QAAID,QAAQ,CAACE,SAAb,EAAwB;AACrB,0BAAO,oBAAC,aAAD;AAAe,QAAA,GAAG,EAAED,KAApB;AAA2B,QAAA,KAAK,EAAED,QAAQ,CAACE,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACF;;AACD,wBAAO,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAED,KAAhB;AAAuB,MAAA,KAAK,EAAED,QAAQ,CAACG,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACF,GALW,CAAZ;AAOAV,EAAAA,SAAS,CAAC,MAAM;AACb,UAAMW,SAAS,GAAGP,IAAI,CAClBQ,MADc,CACNL,QAAD,IAAcA,QAAQ,CAACG,KADhB,EAEdJ,GAFc,CAETF,IAAD,IAAUA,IAAI,CAACM,KAFL,EAGdG,MAHc,CAGP,CAACC,GAAG,GAAG,CAAP,EAAUJ,KAAV,KAAoBI,GAAG,GAAGJ,KAHnB,CAAlB,CADa,CAKb;;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACF,GAPQ,EAON,EAPM,CAAT;AAQA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,KAAL,CAAP;AACF,CAjBD;;AAmBA,eAAeF,QAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport TableCell from \"./TableCell/TabeCell\";\nimport NumerableCell from \"./TableCell/NumerableCell\";\n\nconst TableRow = ({ data }) => {\n   let cells = data.map((cellData, index) => {\n      if (cellData.rowNumber) {\n         return <NumerableCell key={index} value={cellData.rowNumber} />;\n      }\n      return <TableCell key={index} value={cellData.value} />;\n   });\n\n   useEffect(() => {\n      const rowValues = data\n         .filter((cellData) => cellData.value)\n         .map((data) => data.value)\n         .reduce((sum = 0, value) => sum + value);\n      // const rowSum = rowValues;\n      console.log(rowValues);\n   }, []);\n   return <tr>{cells}</tr>;\n};\n\nexport default TableRow;\n"]},"metadata":{},"sourceType":"module"}