{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/Table/TableBody/TableRow/index.js\";\nimport React, { useMemo } from \"react\";\nimport TableCell from \"./TableCell/TabeCell\";\nimport NumerableCell from \"./TableCell/NumerableCell\";\n\nconst TableRow = ({\n  data\n}) => {\n  let matrixCells = data.map((cellData, index) => {\n    if (cellData.rowNumber) {\n      return /*#__PURE__*/React.createElement(NumerableCell, {\n        key: index,\n        value: cellData.rowNumber,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 17\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(TableCell, {\n      key: index,\n      value: cellData.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 14\n      }\n    });\n  });\n  const generalCells = useMemo(() => {\n    const sumRow = data.filter(cellData => cellData.value).map(data => data.value).reduce((sum = 0, value) => sum + value);\n    return matrixCells.push( /*#__PURE__*/React.createElement(NumerableCell, {\n      key: sumRow,\n      value: sumRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 31\n      }\n    }));\n  }, [matrixCells]);\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, generalCells);\n};\n\nexport default TableRow;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/Table/TableBody/TableRow/index.js"],"names":["React","useMemo","TableCell","NumerableCell","TableRow","data","matrixCells","map","cellData","index","rowNumber","value","generalCells","sumRow","filter","reduce","sum","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC5B,MAAIC,WAAW,GAAGD,IAAI,CAACE,GAAL,CAAS,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC7C,QAAID,QAAQ,CAACE,SAAb,EAAwB;AACrB,0BAAO,oBAAC,aAAD;AAAe,QAAA,GAAG,EAAED,KAApB;AAA2B,QAAA,KAAK,EAAED,QAAQ,CAACE,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACF;;AACD,wBAAO,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAED,KAAhB;AAAuB,MAAA,KAAK,EAAED,QAAQ,CAACG,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACF,GALiB,CAAlB;AAOA,QAAMC,YAAY,GAAGX,OAAO,CAAC,MAAM;AAChC,UAAMY,MAAM,GAAGR,IAAI,CACfS,MADW,CACHN,QAAD,IAAcA,QAAQ,CAACG,KADnB,EAEXJ,GAFW,CAENF,IAAD,IAAUA,IAAI,CAACM,KAFR,EAGXI,MAHW,CAGJ,CAACC,GAAG,GAAG,CAAP,EAAUL,KAAV,KAAoBK,GAAG,GAAGL,KAHtB,CAAf;AAIA,WAAOL,WAAW,CAACW,IAAZ,eAAiB,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAEJ,MAApB;AAA4B,MAAA,KAAK,EAAEA,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjB,CAAP;AACF,GAN2B,EAMzB,CAACP,WAAD,CANyB,CAA5B;AAQA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKM,YAAL,CAAP;AACF,CAjBD;;AAmBA,eAAeR,QAAf","sourcesContent":["import React, { useMemo } from \"react\";\nimport TableCell from \"./TableCell/TabeCell\";\nimport NumerableCell from \"./TableCell/NumerableCell\";\n\nconst TableRow = ({ data }) => {\n   let matrixCells = data.map((cellData, index) => {\n      if (cellData.rowNumber) {\n         return <NumerableCell key={index} value={cellData.rowNumber} />;\n      }\n      return <TableCell key={index} value={cellData.value} />;\n   });\n\n   const generalCells = useMemo(() => {\n      const sumRow = data\n         .filter((cellData) => cellData.value)\n         .map((data) => data.value)\n         .reduce((sum = 0, value) => sum + value);\n      return matrixCells.push(<NumerableCell key={sumRow} value={sumRow} />);\n   }, [matrixCells]);\n\n   return <tr>{generalCells}</tr>;\n};\n\nexport default TableRow;\n"]},"metadata":{},"sourceType":"module"}