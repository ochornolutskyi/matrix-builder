{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/Table/TableBody/AverageRow/index.js\";\nimport React, { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst AverageRow = () => {\n  const data = useSelector(state => state.matrix.data.map(item => item.filter(data => data.value).map(row => row.value)));\n  const averageSum = useMemo(() => {\n    return data.reduce((current, next) => current.map((value, index) => {\n      return value + next[index];\n    }));\n  }, [data]);\n  const averageValues = useMemo(() => {\n    //current row values and next row values return the sum of values by equal index\n    return data.reduce((current, next) => current.map((value, index) => (value + next[index]) / data.length));\n  }, [data]);\n  console.log(averageSum, averageValues);\n  /*    useEffect(() => {\n     const averageSum = [];\n     const averageSum = \n  }, [data]); */\n\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  });\n};\n\nexport default AverageRow;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/Table/TableBody/AverageRow/index.js"],"names":["React","useMemo","useSelector","AverageRow","data","state","matrix","map","item","filter","value","row","averageSum","reduce","current","next","index","averageValues","length","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACtB,QAAMC,IAAI,GAAGF,WAAW,CAAEG,KAAD,IACtBA,KAAK,CAACC,MAAN,CAAaF,IAAb,CAAkBG,GAAlB,CAAuBC,IAAD,IACnBA,IAAI,CAACC,MAAL,CAAaL,IAAD,IAAUA,IAAI,CAACM,KAA3B,EAAkCH,GAAlC,CAAuCI,GAAD,IAASA,GAAG,CAACD,KAAnD,CADH,CADqB,CAAxB;AAKA,QAAME,UAAU,GAAGX,OAAO,CAAC,MAAM;AAC9B,WAAOG,IAAI,CAACS,MAAL,CAAY,CAACC,OAAD,EAAUC,IAAV,KAChBD,OAAO,CAACP,GAAR,CAAY,CAACG,KAAD,EAAQM,KAAR,KAAkB;AAC3B,aAAON,KAAK,GAAGK,IAAI,CAACC,KAAD,CAAnB;AACF,KAFD,CADI,CAAP;AAKF,GANyB,EAMvB,CAACZ,IAAD,CANuB,CAA1B;AAOA,QAAMa,aAAa,GAAGhB,OAAO,CAAC,MAAM;AACjC;AACA,WAAOG,IAAI,CAACS,MAAL,CAAY,CAACC,OAAD,EAAUC,IAAV,KAChBD,OAAO,CAACP,GAAR,CAAY,CAACG,KAAD,EAAQM,KAAR,KAAkB,CAACN,KAAK,GAAGK,IAAI,CAACC,KAAD,CAAb,IAAwBZ,IAAI,CAACc,MAA3D,CADI,CAAP;AAGF,GAL4B,EAK1B,CAACd,IAAD,CAL0B,CAA7B;AAMAe,EAAAA,OAAO,CAACC,GAAR,CAAYR,UAAZ,EAAwBK,aAAxB;AAEA;;;;;AAKA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACF,CA3BD;;AA6BA,eAAed,UAAf","sourcesContent":["import React, { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst AverageRow = () => {\n   const data = useSelector((state) =>\n      state.matrix.data.map((item) =>\n         item.filter((data) => data.value).map((row) => row.value)\n      )\n   );\n   const averageSum = useMemo(() => {\n      return data.reduce((current, next) =>\n         current.map((value, index) => {\n            return value + next[index];\n         })\n      );\n   }, [data]);\n   const averageValues = useMemo(() => {\n      //current row values and next row values return the sum of values by equal index\n      return data.reduce((current, next) =>\n         current.map((value, index) => (value + next[index]) / data.length)\n      );\n   }, [data]);\n   console.log(averageSum, averageValues);\n\n   /*    useEffect(() => {\n      const averageSum = [];\n      const averageSum = \n   }, [data]); */\n\n   return <tr></tr>;\n};\n\nexport default AverageRow;\n"]},"metadata":{},"sourceType":"module"}