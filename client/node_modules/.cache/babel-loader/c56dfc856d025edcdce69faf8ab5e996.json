{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/TableRow/index.js\";\nimport React, { useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { removeRow } from \"../../../../../redux/actions\";\nimport CrossButton from \"../../../../CrossButton\";\nimport IncrementCell from \"./TableCell/IncrementCell\";\nimport StaticCell from \"./TableCell/StaticCell\";\nimport SumCell from \"./TableCell/SumCell\";\n/* const showPercentage = (ref) => {\n   // return (ref.style.background = \"red\");\n}; */\n\nconst hoverCellHandler = (values, currentValue) => {\n  console.log(values, currentValue);\n};\n\nconst TableRow = ({\n  rowCount,\n  data\n}) => {\n  // const cellRef = useRef([]);\n  const sumRow = data.map(data => data.value).reduce((sum = 0, value) => sum + value);\n  const rowLabel = /*#__PURE__*/React.createElement(StaticCell, {\n    key: rowCount,\n    value: rowCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  });\n  const rowCells = data.map((cellData, index) => {\n    // const percentOfSum = Math.round((cellData.value * 100) / sumRow);\n    return /*#__PURE__*/React.createElement(IncrementCell, {\n      key: cellData.id,\n      id: cellData.id,\n      value: cellData.value // percent={percentOfSum}\n      // ref={cellRef[index]}\n      ,\n      hoverCellHandler: () => hoverCellHandler(data.map(data => data.value), cellData.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 10\n      }\n    });\n  });\n  const sumRowCell = /*#__PURE__*/React.createElement(SumCell, {\n    key: sumRow,\n    value: sumRow // hoverHandler={() => showPercentage(cellRef)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  });\n  const cells = [rowLabel, ...rowCells, sumRowCell];\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, cells, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(CrossButton, {\n    buttonClickHandler: () => dispatch(removeRow(rowCount)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default TableRow;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/TableRow/index.js"],"names":["React","useRef","useDispatch","removeRow","CrossButton","IncrementCell","StaticCell","SumCell","hoverCellHandler","values","currentValue","console","log","TableRow","rowCount","data","sumRow","map","value","reduce","sum","rowLabel","rowCells","cellData","index","id","sumRowCell","cells","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA;;;;AAGA,MAAMC,gBAAgB,GAAG,CAACC,MAAD,EAASC,YAAT,KAA0B;AAChDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAAoBC,YAApB;AACF,CAFD;;AAIA,MAAMG,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AACtC;AACA,QAAMC,MAAM,GAAGD,IAAI,CACfE,GADW,CACNF,IAAD,IAAUA,IAAI,CAACG,KADR,EAEXC,MAFW,CAEJ,CAACC,GAAG,GAAG,CAAP,EAAUF,KAAV,KAAoBE,GAAG,GAAGF,KAFtB,CAAf;AAGA,QAAMG,QAAQ,gBAAG,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEP,QAAjB;AAA2B,IAAA,KAAK,EAAEA,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjB;AACA,QAAMQ,QAAQ,GAAGP,IAAI,CAACE,GAAL,CAAS,CAACM,QAAD,EAAWC,KAAX,KAAqB;AAC5C;AACA,wBACG,oBAAC,aAAD;AACG,MAAA,GAAG,EAAED,QAAQ,CAACE,EADjB;AAEG,MAAA,EAAE,EAAEF,QAAQ,CAACE,EAFhB;AAGG,MAAA,KAAK,EAAEF,QAAQ,CAACL,KAHnB,CAIG;AACA;AALH;AAMG,MAAA,gBAAgB,EAAE,MACfV,gBAAgB,CACbO,IAAI,CAACE,GAAL,CAAUF,IAAD,IAAUA,IAAI,CAACG,KAAxB,CADa,EAEbK,QAAQ,CAACL,KAFI,CAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH;AAeF,GAjBgB,CAAjB;AAkBA,QAAMQ,UAAU,gBACb,oBAAC,OAAD;AACG,IAAA,GAAG,EAAEV,MADR;AAEG,IAAA,KAAK,EAAEA,MAFV,CAGG;AAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH;AAOA,QAAMW,KAAK,GAAG,CAACN,QAAD,EAAW,GAAGC,QAAd,EAAwBI,UAAxB,CAAd;AACA,QAAME,QAAQ,GAAG1B,WAAW,EAA5B;AAEA,sBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIyB,KADJ,eAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,WAAD;AACG,IAAA,kBAAkB,EAAE,MAAMC,QAAQ,CAACzB,SAAS,CAACW,QAAD,CAAV,CADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAFH,CADH;AAUF,CA5CD;;AA8CA,eAAeD,QAAf","sourcesContent":["import React, { useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { removeRow } from \"../../../../../redux/actions\";\nimport CrossButton from \"../../../../CrossButton\";\nimport IncrementCell from \"./TableCell/IncrementCell\";\nimport StaticCell from \"./TableCell/StaticCell\";\nimport SumCell from \"./TableCell/SumCell\";\n\n/* const showPercentage = (ref) => {\n   // return (ref.style.background = \"red\");\n}; */\nconst hoverCellHandler = (values, currentValue) => {\n   console.log(values, currentValue);\n};\n\nconst TableRow = ({ rowCount, data }) => {\n   // const cellRef = useRef([]);\n   const sumRow = data\n      .map((data) => data.value)\n      .reduce((sum = 0, value) => sum + value);\n   const rowLabel = <StaticCell key={rowCount} value={rowCount} />;\n   const rowCells = data.map((cellData, index) => {\n      // const percentOfSum = Math.round((cellData.value * 100) / sumRow);\n      return (\n         <IncrementCell\n            key={cellData.id}\n            id={cellData.id}\n            value={cellData.value}\n            // percent={percentOfSum}\n            // ref={cellRef[index]}\n            hoverCellHandler={() =>\n               hoverCellHandler(\n                  data.map((data) => data.value),\n                  cellData.value\n               )\n            }\n         />\n      );\n   });\n   const sumRowCell = (\n      <SumCell\n         key={sumRow}\n         value={sumRow}\n         // hoverHandler={() => showPercentage(cellRef)}\n      />\n   );\n   const cells = [rowLabel, ...rowCells, sumRowCell];\n   const dispatch = useDispatch();\n\n   return (\n      <tr>\n         {cells}\n         <td>\n            <CrossButton\n               buttonClickHandler={() => dispatch(removeRow(rowCount))}\n            />\n         </td>\n      </tr>\n   );\n};\n\nexport default TableRow;\n"]},"metadata":{},"sourceType":"module"}