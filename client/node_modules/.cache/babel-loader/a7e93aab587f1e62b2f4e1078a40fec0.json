{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/AverageRow/index.js\";\nimport React from \"react\";\nimport RowFragment from \"../RowFragment\";\nimport calculateAverageValues from \"./calculateAverageValues\";\nconst className = \"average-cell\";\n\nconst AverageRow = ({\n  matrixData\n}) => {\n  const averageColumnsValues = calculateAverageValues(matrixData);\n  const sumRow = averageColumnsValues.reduce((sum, value) => sum + value, 0).toFixed(2);\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RowFragment, {\n    className: className,\n    label: \"Avg\",\n    rowValues: averageColumnsValues,\n    sumRow: sumRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 10\n    }\n  }));\n};\n\nexport default AverageRow;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/AverageRow/index.js"],"names":["React","RowFragment","calculateAverageValues","className","AverageRow","matrixData","averageColumnsValues","sumRow","reduce","sum","value","toFixed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AAEA,MAAMC,SAAS,GAAG,cAAlB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACpC,QAAMC,oBAAoB,GAAGJ,sBAAsB,CAACG,UAAD,CAAnD;AACA,QAAME,MAAM,GAAGD,oBAAoB,CAC/BE,MADW,CACJ,CAACC,GAAD,EAAMC,KAAN,KAAgBD,GAAG,GAAGC,KADlB,EACyB,CADzB,EAEXC,OAFW,CAEH,CAFG,CAAf;AAGA,sBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,WAAD;AACG,IAAA,SAAS,EAAER,SADd;AAEG,IAAA,KAAK,EAAC,KAFT;AAGG,IAAA,SAAS,EAAEG,oBAHd;AAIG,IAAA,MAAM,EAAEC,MAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADH;AAUF,CAfD;;AAiBA,eAAeH,UAAf","sourcesContent":["import React from \"react\";\nimport RowFragment from \"../RowFragment\";\nimport calculateAverageValues from \"./calculateAverageValues\";\n\nconst className = \"average-cell\";\n\nconst AverageRow = ({ matrixData }) => {\n   const averageColumnsValues = calculateAverageValues(matrixData);\n   const sumRow = averageColumnsValues\n      .reduce((sum, value) => sum + value, 0)\n      .toFixed(2);\n   return (\n      <tr>\n         <RowFragment\n            className={className}\n            label=\"Avg\"\n            rowValues={averageColumnsValues}\n            sumRow={sumRow}\n         />\n      </tr>\n   );\n};\n\nexport default AverageRow;\n"]},"metadata":{},"sourceType":"module"}