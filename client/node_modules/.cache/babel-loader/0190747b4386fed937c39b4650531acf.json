{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/TableRow/index.js\";\nimport React, { useMemo } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { removeRow } from \"../../../../../redux/actions\";\nimport CrossButton from \"../../../../CrossButton\";\nimport IncrementCell from \"./TableCell/IncrementCell\";\nimport StaticCell from \"./TableCell/StaticCell\";\nimport SumCell from \"./TableCell/SumCell\";\n\nconst calcPercentage = (data, sum) => {\n  // console.log(data, sum);\n  console.log(data.map(value => value * 100 / sum.toFixed(1)));\n};\n\nconst TableRow = ({\n  rowCount,\n  data\n}) => {\n  const sumRow = data.map(data => data.value).reduce((sum = 0, value) => sum + value);\n  const rowLabel = /*#__PURE__*/React.createElement(StaticCell, {\n    key: rowCount,\n    value: rowCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  });\n  const rowCells = data.map(cellData => /*#__PURE__*/React.createElement(IncrementCell, {\n    key: cellData.id,\n    id: cellData.id,\n    value: cellData.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }));\n  const sumRowCell = /*#__PURE__*/React.createElement(SumCell, {\n    key: sumRow,\n    value: sumRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 23\n    }\n  });\n  const cells = [rowLabel, ...rowCells, sumRowCell];\n  const dispatch = useDispatch();\n  calcPercentage(data.map(item => item.value), sumRow);\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, cells, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(CrossButton, {\n    buttonClickHandler: () => dispatch(removeRow(rowCount)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default TableRow;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/TableRow/index.js"],"names":["React","useMemo","useDispatch","removeRow","CrossButton","IncrementCell","StaticCell","SumCell","calcPercentage","data","sum","console","log","map","value","toFixed","TableRow","rowCount","sumRow","reduce","rowLabel","rowCells","cellData","id","sumRowCell","cells","dispatch","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,MAAMC,cAAc,GAAG,CAACC,IAAD,EAAOC,GAAP,KAAe;AACnC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,GAAL,CAAUC,KAAD,IAAYA,KAAK,GAAG,GAAT,GAAgBJ,GAAG,CAACK,OAAJ,CAAY,CAAZ,CAApC,CAAZ;AACF,CAHD;;AAKA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYR,EAAAA;AAAZ,CAAD,KAAwB;AACtC,QAAMS,MAAM,GAAGT,IAAI,CACfI,GADW,CACNJ,IAAD,IAAUA,IAAI,CAACK,KADR,EAEXK,MAFW,CAEJ,CAACT,GAAG,GAAG,CAAP,EAAUI,KAAV,KAAoBJ,GAAG,GAAGI,KAFtB,CAAf;AAGA,QAAMM,QAAQ,gBAAG,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEH,QAAjB;AAA2B,IAAA,KAAK,EAAEA,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjB;AACA,QAAMI,QAAQ,GAAGZ,IAAI,CAACI,GAAL,CAAUS,QAAD,iBACvB,oBAAC,aAAD;AACG,IAAA,GAAG,EAAEA,QAAQ,CAACC,EADjB;AAEG,IAAA,EAAE,EAAED,QAAQ,CAACC,EAFhB;AAGG,IAAA,KAAK,EAAED,QAAQ,CAACR,KAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,CAAjB;AAOA,QAAMU,UAAU,gBAAG,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEN,MAAd;AAAsB,IAAA,KAAK,EAAEA,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB;AACA,QAAMO,KAAK,GAAG,CAACL,QAAD,EAAW,GAAGC,QAAd,EAAwBG,UAAxB,CAAd;AACA,QAAME,QAAQ,GAAGxB,WAAW,EAA5B;AAEAM,EAAAA,cAAc,CACXC,IAAI,CAACI,GAAL,CAAUc,IAAD,IAAUA,IAAI,CAACb,KAAxB,CADW,EAEXI,MAFW,CAAd;AAKA,sBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIO,KADJ,eAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,WAAD;AACG,IAAA,kBAAkB,EAAE,MAAMC,QAAQ,CAACvB,SAAS,CAACc,QAAD,CAAV,CADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAFH,CADH;AAUF,CA/BD;;AAiCA,eAAeD,QAAf","sourcesContent":["import React, { useMemo } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { removeRow } from \"../../../../../redux/actions\";\nimport CrossButton from \"../../../../CrossButton\";\nimport IncrementCell from \"./TableCell/IncrementCell\";\nimport StaticCell from \"./TableCell/StaticCell\";\nimport SumCell from \"./TableCell/SumCell\";\n\nconst calcPercentage = (data, sum) => {\n   // console.log(data, sum);\n   console.log(data.map((value) => (value * 100) / sum.toFixed(1)));\n};\n\nconst TableRow = ({ rowCount, data }) => {\n   const sumRow = data\n      .map((data) => data.value)\n      .reduce((sum = 0, value) => sum + value);\n   const rowLabel = <StaticCell key={rowCount} value={rowCount} />;\n   const rowCells = data.map((cellData) => (\n      <IncrementCell\n         key={cellData.id}\n         id={cellData.id}\n         value={cellData.value}\n      />\n   ));\n   const sumRowCell = <SumCell key={sumRow} value={sumRow} />;\n   const cells = [rowLabel, ...rowCells, sumRowCell];\n   const dispatch = useDispatch();\n\n   calcPercentage(\n      data.map((item) => item.value),\n      sumRow\n   );\n\n   return (\n      <tr>\n         {cells}\n         <td>\n            <CrossButton\n               buttonClickHandler={() => dispatch(removeRow(rowCount))}\n            />\n         </td>\n      </tr>\n   );\n};\n\nexport default TableRow;\n"]},"metadata":{},"sourceType":"module"}