{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/AverageRow/index.js\";\nimport React, { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport StaticCell from \"../TableRow/TableCell/StaticCell\";\n\nconst AverageRow = () => {\n  const data = useSelector(state => state.matrix.map(item => item.filter(data => data.value).map(row => row.value))); //current row values and next row values return the sum of values by equal index\n\n  const averageValues = useMemo(() => data.reduce((currentRow, nextRow) => currentRow.map((value, index) => value + nextRow[index])).map(value => value / data.length), [data]);\n\n  const getAvgRowLabel = () => /*#__PURE__*/React.createElement(TableCell, {\n    key: \"avg\",\n    value: \"Avg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 33\n    }\n  });\n\n  const getAvgRowCells = () => averageValues.map((value, index) => /*#__PURE__*/React.createElement(TableCell, {\n    key: index,\n    value: value.toFixed(2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }\n  }));\n\n  const cells = [getAvgRowLabel(), ...getAvgRowCells()];\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, cells);\n};\n\nexport default AverageRow;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/AverageRow/index.js"],"names":["React","useMemo","useSelector","StaticCell","AverageRow","data","state","matrix","map","item","filter","value","row","averageValues","reduce","currentRow","nextRow","index","length","getAvgRowLabel","getAvgRowCells","toFixed","cells"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACtB,QAAMC,IAAI,GAAGH,WAAW,CAAEI,KAAD,IACtBA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAkBC,IAAD,IACdA,IAAI,CAACC,MAAL,CAAaL,IAAD,IAAUA,IAAI,CAACM,KAA3B,EAAkCH,GAAlC,CAAuCI,GAAD,IAASA,GAAG,CAACD,KAAnD,CADH,CADqB,CAAxB,CADsB,CAMtB;;AACA,QAAME,aAAa,GAAGZ,OAAO,CAC1B,MACGI,IAAI,CACAS,MADJ,CACW,CAACC,UAAD,EAAaC,OAAb,KACLD,UAAU,CAACP,GAAX,CAAe,CAACG,KAAD,EAAQM,KAAR,KAAkBN,KAAK,GAAGK,OAAO,CAACC,KAAD,CAAhD,CAFN,EAIIT,GAJJ,CAISG,KAAD,IAAWA,KAAK,GAAGN,IAAI,CAACa,MAJhC,CAFuB,EAO1B,CAACb,IAAD,CAP0B,CAA7B;;AASA,QAAMc,cAAc,GAAG,mBAAM,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAC,KAAf;AAAqB,IAAA,KAAK,EAAC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA7B;;AACA,QAAMC,cAAc,GAAG,MACpBP,aAAa,CAACL,GAAd,CAAkB,CAACG,KAAD,EAAQM,KAAR,kBACf,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,KAAhB;AAAuB,IAAA,KAAK,EAAEN,KAAK,CAACU,OAAN,CAAc,CAAd,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADH;;AAIA,QAAMC,KAAK,GAAG,CAACH,cAAc,EAAf,EAAmB,GAAGC,cAAc,EAApC,CAAd;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,KAAL,CAAP;AACF,CAxBD;;AA0BA,eAAelB,UAAf","sourcesContent":["import React, { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport StaticCell from \"../TableRow/TableCell/StaticCell\";\n\nconst AverageRow = () => {\n   const data = useSelector((state) =>\n      state.matrix.map((item) =>\n         item.filter((data) => data.value).map((row) => row.value)\n      )\n   );\n   //current row values and next row values return the sum of values by equal index\n   const averageValues = useMemo(\n      () =>\n         data\n            .reduce((currentRow, nextRow) =>\n               currentRow.map((value, index) => value + nextRow[index])\n            )\n            .map((value) => value / data.length),\n      [data]\n   );\n   const getAvgRowLabel = () => <TableCell key=\"avg\" value=\"Avg\" />;\n   const getAvgRowCells = () =>\n      averageValues.map((value, index) => (\n         <TableCell key={index} value={value.toFixed(2)} />\n      ));\n   const cells = [getAvgRowLabel(), ...getAvgRowCells()];\n\n   return <tr>{cells}</tr>;\n};\n\nexport default AverageRow;\n"]},"metadata":{},"sourceType":"module"}