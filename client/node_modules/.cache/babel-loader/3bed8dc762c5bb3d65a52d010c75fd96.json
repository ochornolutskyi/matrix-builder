{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/TableRow/index.js\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { cellRenderers } from \"../../../../../CellRenderers\";\nimport { removeRow } from \"../../../../../redux/actions\";\nimport CrossButton from \"../../../../CrossButton\";\nimport IncrementCell from \"./TableCell/CellRenderer/IncrementCell\";\nimport PercentageCell from \"./TableCell/CellRenderer/PercentageCell\";\nimport StaticCell from \"./TableCell/CellRenderer/StaticCell\";\n\nconst TableRow = ({\n  rowCount,\n  data\n}) => {\n  const dispatch = useDispatch();\n  const [sumIsHover, setSumIsHover] = useState(false);\n  const sumRow = data.map(data => data.value).reduce((sum = 0, value) => sum + value);\n  const rowLabel = /*#__PURE__*/React.createElement(StaticCell, {\n    key: rowCount,\n    value: rowCount,\n    Renderer: cellRenderers.static,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  });\n\n  const rowRenderer = cellData => {\n    return sumIsHover ? /*#__PURE__*/React.createElement(PercentageCell, {\n      key: cellData.id,\n      sumRow: sumRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 10\n      }\n    }) : /*#__PURE__*/React.createElement(IncrementCell, {\n      key: cellData.id,\n      id: cellData.id,\n      value: cellData.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 10\n      }\n    });\n  };\n\n  const rowCells = () => {\n    return data.map(cellData => rowRenderer(cellData));\n  };\n\n  const sumRowCell = /*#__PURE__*/React.createElement(StaticCell, {\n    key: sumRow,\n    value: sumRow,\n    sumMouseEnterHandler: () => setSumIsHover(true),\n    sumMouseLeaveHandler: () => setSumIsHover(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  });\n  const cells = [rowLabel, ...rowCells(), sumRowCell];\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, cells, /*#__PURE__*/React.createElement(CrossButton, {\n    buttonClickHandler: () => dispatch(removeRow(rowCount)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 10\n    }\n  }));\n};\n\nexport default TableRow;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/TableRow/index.js"],"names":["React","useState","useDispatch","cellRenderers","removeRow","CrossButton","IncrementCell","PercentageCell","StaticCell","TableRow","rowCount","data","dispatch","sumIsHover","setSumIsHover","sumRow","map","value","reduce","sum","rowLabel","static","rowRenderer","cellData","id","rowCells","sumRowCell","cells"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,OAAOC,cAAP,MAA2B,yCAA3B;AACA,OAAOC,UAAP,MAAuB,qCAAvB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AACtC,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAMc,MAAM,GAAGJ,IAAI,CACfK,GADW,CACNL,IAAD,IAAUA,IAAI,CAACM,KADR,EAEXC,MAFW,CAEJ,CAACC,GAAG,GAAG,CAAP,EAAUF,KAAV,KAAoBE,GAAG,GAAGF,KAFtB,CAAf;AAIA,QAAMG,QAAQ,gBACX,oBAAC,UAAD;AACG,IAAA,GAAG,EAAEV,QADR;AAEG,IAAA,KAAK,EAAEA,QAFV;AAGG,IAAA,QAAQ,EAAEP,aAAa,CAACkB,MAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH;;AAOA,QAAMC,WAAW,GAAIC,QAAD,IAAc;AAC/B,WAAOV,UAAU,gBACd,oBAAC,cAAD;AAAgB,MAAA,GAAG,EAAEU,QAAQ,CAACC,EAA9B;AAAkC,MAAA,MAAM,EAAET,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADc,gBAGd,oBAAC,aAAD;AACG,MAAA,GAAG,EAAEQ,QAAQ,CAACC,EADjB;AAEG,MAAA,EAAE,EAAED,QAAQ,CAACC,EAFhB;AAGG,MAAA,KAAK,EAAED,QAAQ,CAACN,KAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH;AASF,GAVD;;AAWA,QAAMQ,QAAQ,GAAG,MAAM;AACpB,WAAOd,IAAI,CAACK,GAAL,CAAUO,QAAD,IAAcD,WAAW,CAACC,QAAD,CAAlC,CAAP;AACF,GAFD;;AAIA,QAAMG,UAAU,gBACb,oBAAC,UAAD;AACG,IAAA,GAAG,EAAEX,MADR;AAEG,IAAA,KAAK,EAAEA,MAFV;AAGG,IAAA,oBAAoB,EAAE,MAAMD,aAAa,CAAC,IAAD,CAH5C;AAIG,IAAA,oBAAoB,EAAE,MAAMA,aAAa,CAAC,KAAD,CAJ5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH;AAQA,QAAMa,KAAK,GAAG,CAACP,QAAD,EAAW,GAAGK,QAAQ,EAAtB,EAA0BC,UAA1B,CAAd;AAEA,sBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIC,KADJ,eAEG,oBAAC,WAAD;AACG,IAAA,kBAAkB,EAAE,MAAMf,QAAQ,CAACR,SAAS,CAACM,QAAD,CAAV,CADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,CADH;AAQF,CA/CD;;AAiDA,eAAeD,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { cellRenderers } from \"../../../../../CellRenderers\";\nimport { removeRow } from \"../../../../../redux/actions\";\nimport CrossButton from \"../../../../CrossButton\";\nimport IncrementCell from \"./TableCell/CellRenderer/IncrementCell\";\nimport PercentageCell from \"./TableCell/CellRenderer/PercentageCell\";\nimport StaticCell from \"./TableCell/CellRenderer/StaticCell\";\n\nconst TableRow = ({ rowCount, data }) => {\n   const dispatch = useDispatch();\n   const [sumIsHover, setSumIsHover] = useState(false);\n   const sumRow = data\n      .map((data) => data.value)\n      .reduce((sum = 0, value) => sum + value);\n\n   const rowLabel = (\n      <StaticCell\n         key={rowCount}\n         value={rowCount}\n         Renderer={cellRenderers.static}\n      />\n   );\n   const rowRenderer = (cellData) => {\n      return sumIsHover ? (\n         <PercentageCell key={cellData.id} sumRow={sumRow} />\n      ) : (\n         <IncrementCell\n            key={cellData.id}\n            id={cellData.id}\n            value={cellData.value}\n         />\n      );\n   };\n   const rowCells = () => {\n      return data.map((cellData) => rowRenderer(cellData));\n   };\n\n   const sumRowCell = (\n      <StaticCell\n         key={sumRow}\n         value={sumRow}\n         sumMouseEnterHandler={() => setSumIsHover(true)}\n         sumMouseLeaveHandler={() => setSumIsHover(false)}\n      />\n   );\n   const cells = [rowLabel, ...rowCells(), sumRowCell];\n\n   return (\n      <tr>\n         {cells}\n         <CrossButton\n            buttonClickHandler={() => dispatch(removeRow(rowCount))}\n         />\n      </tr>\n   );\n};\n\nexport default TableRow;\n"]},"metadata":{},"sourceType":"module"}