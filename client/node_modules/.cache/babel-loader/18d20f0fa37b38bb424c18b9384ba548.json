{"ast":null,"code":"import _slicedToArray from\"/home/superproger/workspace/matrix-builder/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import PercentageCell from\"./CellRenderer/PercentageCell\";import StaticCell from\"./CellRenderer/StaticCell\";import SumCell from\"./CellRenderer/SumCell\";var RowFragment=function RowFragment(_ref){var label=_ref.label,RendererType=_ref.RendererType,rowData=_ref.rowData,sumRow=_ref.sumRow;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showPercentageValue=_useState2[0],setShowPercentageValue=_useState2[1];var Renderer=showPercentageValue?PercentageCell:RendererType;var rowCells=rowData.map(function(cellData,index){var value=cellData.value||cellData;return/*#__PURE__*/React.createElement(Renderer,{key:cellData.id||index,id:cellData.id,value:value,sumRow:sumRow});});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(StaticCell,{key:label,value:label}),rowCells,/*#__PURE__*/React.createElement(SumCell,{key:sumRow,value:sumRow,sumMouseEnterHandler:function sumMouseEnterHandler(){return setShowPercentageValue(true);},sumMouseLeaveHandler:function sumMouseLeaveHandler(){return setShowPercentageValue(false);}}));};export default RowFragment;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/RowFragment/index.js"],"names":["React","useState","PercentageCell","StaticCell","SumCell","RowFragment","label","RendererType","rowData","sumRow","showPercentageValue","setShowPercentageValue","Renderer","rowCells","map","cellData","index","value","id"],"mappings":"wKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,cAAP,KAA2B,+BAA3B,CACA,MAAOC,CAAAA,UAAP,KAAuB,2BAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAA8C,IAA3CC,CAAAA,KAA2C,MAA3CA,KAA2C,CAApCC,YAAoC,MAApCA,YAAoC,CAAtBC,OAAsB,MAAtBA,OAAsB,CAAbC,MAAa,MAAbA,MAAa,eACTR,QAAQ,CAAC,KAAD,CADC,wCACxDS,mBADwD,eACnCC,sBADmC,eAE/D,GAAMC,CAAAA,QAAQ,CAAGF,mBAAmB,CAAGR,cAAH,CAAoBK,YAAxD,CACA,GAAMM,CAAAA,QAAQ,CAAGL,OAAO,CAACM,GAAR,CAAY,SAACC,QAAD,CAAWC,KAAX,CAAqB,CAC/C,GAAMC,CAAAA,KAAK,CAAGF,QAAQ,CAACE,KAAT,EAAkBF,QAAhC,CACA,mBACG,oBAAC,QAAD,EACG,GAAG,CAAEA,QAAQ,CAACG,EAAT,EAAeF,KADvB,CAEG,EAAE,CAAED,QAAQ,CAACG,EAFhB,CAGG,KAAK,CAAED,KAHV,CAIG,MAAM,CAAER,MAJX,EADH,CAQF,CAVgB,CAAjB,CAYA,mBACG,oBAAC,KAAD,CAAO,QAAP,mBACG,oBAAC,UAAD,EAAY,GAAG,CAAEH,KAAjB,CAAwB,KAAK,CAAEA,KAA/B,EADH,CAEIO,QAFJ,cAGG,oBAAC,OAAD,EACG,GAAG,CAAEJ,MADR,CAEG,KAAK,CAAEA,MAFV,CAGG,oBAAoB,CAAE,sCAAME,CAAAA,sBAAsB,CAAC,IAAD,CAA5B,EAHzB,CAIG,oBAAoB,CAAE,sCAAMA,CAAAA,sBAAsB,CAAC,KAAD,CAA5B,EAJzB,EAHH,CADH,CAYF,CA3BD,CA6BA,cAAeN,CAAAA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport PercentageCell from \"./CellRenderer/PercentageCell\";\nimport StaticCell from \"./CellRenderer/StaticCell\";\nimport SumCell from \"./CellRenderer/SumCell\";\n\nconst RowFragment = ({ label, RendererType, rowData, sumRow }) => {\n   const [showPercentageValue, setShowPercentageValue] = useState(false);\n   const Renderer = showPercentageValue ? PercentageCell : RendererType;\n   const rowCells = rowData.map((cellData, index) => {\n      const value = cellData.value || cellData;\n      return (\n         <Renderer\n            key={cellData.id || index}\n            id={cellData.id}\n            value={value}\n            sumRow={sumRow}\n         />\n      );\n   });\n\n   return (\n      <React.Fragment>\n         <StaticCell key={label} value={label} />\n         {rowCells}\n         <SumCell\n            key={sumRow}\n            value={sumRow}\n            sumMouseEnterHandler={() => setShowPercentageValue(true)}\n            sumMouseLeaveHandler={() => setShowPercentageValue(false)}\n         />\n      </React.Fragment>\n   );\n};\n\nexport default RowFragment;\n"]},"metadata":{},"sourceType":"module"}