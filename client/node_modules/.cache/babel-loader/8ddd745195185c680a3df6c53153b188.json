{"ast":null,"code":"import _objectSpread from\"/home/superproger/workspace/matrix-builder/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/home/superproger/workspace/matrix-builder/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{INCREMENT_CELL,REMOVE_ROW,ADD_ROW,SET_NEAREST_IDS,RESET_NEAREST_IDS,SET_SETTINGS,RESET_SETTINGS}from\"../../action_types\";import{createMatrix,rebuildMatrix,addRows}from\"./buildingMatrix\";import defaultState from\"./defaultState\";import getIds from\"./findNearestIds\";var initialState=defaultState;var sortData=function sortData(data){return data.flat().sort(function(a,b){return a.value-b.value;});};var checkMatrixData=function checkMatrixData(data,settings,newSettings){if(data.length===0){return createMatrix(newSettings.rowsCount,newSettings.columnsCount);}else if(settings.rowsCount!==newSettings.rowsCount||settings.columnsCount!==newSettings.columnsCount){return rebuildMatrix(data,settings,newSettings);}else{return data;}};var matrixReducer=function matrixReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;var data,sortedData,settings;switch(action.type){case SET_SETTINGS:data=checkMatrixData(_toConsumableArray(state.data),state.settings,action.settings);return _objectSpread(_objectSpread({},state),{},{data:data,sortedData:sortData(data),settings:action.settings});case RESET_SETTINGS:return{defaultState:defaultState};case ADD_ROW:data=addRows(_toConsumableArray(state.data),1,state.settings.columnsCount);settings=_objectSpread(_objectSpread({},state.settings),{},{rowsCount:data.length});return _objectSpread(_objectSpread({},state),{},{settings:settings,data:data,sortedData:sortData(data)});case REMOVE_ROW:data=state.data.filter(function(row,index){return index!==action.rowIndex;});settings=_objectSpread(_objectSpread({},state.settings),{},{rowsCount:state.data.length});return _objectSpread(_objectSpread({},state),{},{settings:settings,data:data,sortedData:sortData(data)});case INCREMENT_CELL:data=_toConsumableArray(state.data);data.find(function(row){return row.find(function(item){return item.id===action.id?item.value++:null;});});sortedData=sortData(data);return _objectSpread(_objectSpread({},state),{},{data:data,sortedData:sortedData,nearestIds:getIds(sortedData,state.settings.cellsCount,action.id)});case SET_NEAREST_IDS:if(state.settings.cellsCount){return _objectSpread(_objectSpread({},state),{},{nearestIds:getIds(state.sortedData,state.settings.cellsCount,action.id)});}else{return _objectSpread({},state);}case RESET_NEAREST_IDS:if(!!state.nearestIds.ids.length){return _objectSpread(_objectSpread({},state),{},{nearestIds:{sameValueIds:[],ids:[]}});}else{return _objectSpread({},state);}default:return defaultState;}};export default matrixReducer;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/redux/reducers/matrixReducer/index.js"],"names":["INCREMENT_CELL","REMOVE_ROW","ADD_ROW","SET_NEAREST_IDS","RESET_NEAREST_IDS","SET_SETTINGS","RESET_SETTINGS","createMatrix","rebuildMatrix","addRows","defaultState","getIds","initialState","sortData","data","flat","sort","a","b","value","checkMatrixData","settings","newSettings","length","rowsCount","columnsCount","matrixReducer","state","action","sortedData","type","filter","row","index","rowIndex","find","item","id","nearestIds","cellsCount","ids","sameValueIds"],"mappings":"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","sourcesContent":["import {\n   INCREMENT_CELL,\n   REMOVE_ROW,\n   ADD_ROW,\n   SET_NEAREST_IDS,\n   RESET_NEAREST_IDS,\n   SET_SETTINGS,\n   RESET_SETTINGS,\n} from \"../../action_types\";\nimport {\n   createMatrix,\n   rebuildMatrix,\n   addRows,\n} from \"./buildingMatrix\";\nimport defaultState from \"./defaultState\";\nimport getIds from \"./findNearestIds\";\n\nconst initialState = defaultState;\nconst sortData = (data) => data.flat().sort((a, b) => a.value - b.value);\n\nconst checkMatrixData = (data, settings, newSettings) => {\n   if (data.length === 0) {\n      return createMatrix(newSettings.rowsCount, newSettings.columnsCount);\n   } else if (\n      settings.rowsCount !== newSettings.rowsCount ||\n      settings.columnsCount !== newSettings.columnsCount\n   ) {\n      return rebuildMatrix(data, settings, newSettings);\n   } else {\n      return data;\n   }\n};\n\nconst matrixReducer = (state = initialState, action) => {\n   let data, sortedData, settings;\n   switch (action.type) {\n      case SET_SETTINGS:\n         data = checkMatrixData(\n            [...state.data],\n            state.settings,\n            action.settings\n         );\n         return {\n            ...state,\n            data,\n            sortedData: sortData(data),\n            settings: action.settings,\n         };\n      case RESET_SETTINGS:\n         return {\n            defaultState,\n         };\n      case ADD_ROW:\n         data = addRows([...state.data], 1, state.settings.columnsCount);\n         settings = { ...state.settings, rowsCount: data.length };\n         return {\n            ...state,\n            settings,\n            data,\n            sortedData: sortData(data),\n         };\n      case REMOVE_ROW:\n         data = state.data.filter((row, index) => index !== action.rowIndex);\n         settings = { ...state.settings, rowsCount: state.data.length };\n         return {\n            ...state,\n            settings,\n            data,\n            sortedData: sortData(data),\n         };\n      case INCREMENT_CELL:\n         data = [...state.data];\n         data.find((row) =>\n            row.find((item) => (item.id === action.id ? item.value++ : null))\n         );\n         sortedData = sortData(data);\n         return {\n            ...state,\n            data,\n            sortedData,\n            nearestIds: getIds(\n               sortedData,\n               state.settings.cellsCount,\n               action.id\n            ),\n         };\n      case SET_NEAREST_IDS:\n         if (state.settings.cellsCount) {\n            return {\n               ...state,\n               nearestIds: getIds(\n                  state.sortedData,\n                  state.settings.cellsCount,\n                  action.id\n               ),\n            };\n         } else {\n            return { ...state };\n         }\n\n      case RESET_NEAREST_IDS:\n         if (!!state.nearestIds.ids.length) {\n            return { ...state, nearestIds: { sameValueIds: [], ids: [] } };\n         } else {\n            return { ...state };\n         }\n      default:\n         return defaultState;\n   }\n};\n\nexport default matrixReducer;\n"]},"metadata":{},"sourceType":"module"}