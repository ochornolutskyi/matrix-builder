{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/SettingsTable/index.js\";\nimport React, { useState, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSettings } from \"../../redux/actions\";\nimport Button from \"../Button\";\nimport InputCounts from \"./InputCounts\";\n\nconst SettingsTable = () => {\n  const settings = useSelector(state => state.matrix.settings);\n  const dispatch = useDispatch(); // const [rowsCount, setRowsCount] = useState(settings.rowsCount);\n\n  const [columnsCount, setColumnsCount] = useState(settings.columnsCount);\n  const [cellsCount, setCellsCount] = useState(settings.cellsCount);\n  let rowsCount = useMemo(() => {\n    return settings.rowsCount;\n  }, [settings.rowsCount]);\n\n  const setTableRows = value => {\n    // setRowsCount(+value);\n    rowsCount = +value;\n  };\n\n  const setTableColumns = value => {\n    setColumnsCount(+value);\n  };\n\n  const setTableCells = value => {\n    setCellsCount(+value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settings-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }\n  }, \"Welcome to Matrix Builder\"), /*#__PURE__*/React.createElement(InputCounts, {\n    id: \"rows\",\n    label: \"Set the rows count\",\n    value: rowsCount,\n    handleChange: event => setTableRows(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(InputCounts, {\n    id: \"columns\",\n    label: \"Set the columns count\",\n    value: columnsCount,\n    handleChange: event => setTableColumns(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(InputCounts, {\n    id: \"cells\",\n    label: \"Set the count of cells to show the nearest value\",\n    value: cellsCount,\n    handleChange: event => setTableCells(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    buttonText: \"Apply settings of matrix\",\n    buttonClickHandler: () => dispatch(setSettings({\n      rowsCount,\n      columnsCount,\n      cellsCount\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }\n  }));\n};\n\nexport default SettingsTable;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/SettingsTable/index.js"],"names":["React","useState","useMemo","useDispatch","useSelector","setSettings","Button","InputCounts","SettingsTable","settings","state","matrix","dispatch","columnsCount","setColumnsCount","cellsCount","setCellsCount","rowsCount","setTableRows","value","setTableColumns","setTableCells","event","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AACzB,QAAMC,QAAQ,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaF,QAAzB,CAA5B;AACA,QAAMG,QAAQ,GAAGT,WAAW,EAA5B,CAFyB,CAGzB;;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAACQ,QAAQ,CAACI,YAAV,CAAhD;AACA,QAAM,CAACE,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAACQ,QAAQ,CAACM,UAAV,CAA5C;AACA,MAAIE,SAAS,GAAGf,OAAO,CAAC,MAAM;AAC3B,WAAOO,QAAQ,CAACQ,SAAhB;AACF,GAFsB,EAEpB,CAACR,QAAQ,CAACQ,SAAV,CAFoB,CAAvB;;AAIA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC7B;AACAF,IAAAA,SAAS,GAAC,CAACE,KAAX;AACF,GAHD;;AAIA,QAAMC,eAAe,GAAID,KAAD,IAAW;AAChCL,IAAAA,eAAe,CAAC,CAACK,KAAF,CAAf;AACF,GAFD;;AAGA,QAAME,aAAa,GAAIF,KAAD,IAAW;AAC9BH,IAAAA,aAAa,CAAC,CAACG,KAAF,CAAb;AACF,GAFD;;AAIA,sBACG;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADH,eAEG,oBAAC,WAAD;AACG,IAAA,EAAE,EAAC,MADN;AAEG,IAAA,KAAK,EAAC,oBAFT;AAGG,IAAA,KAAK,EAAEF,SAHV;AAIG,IAAA,YAAY,EAAGK,KAAD,IAAWJ,YAAY,CAACI,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAJxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,eAQG,oBAAC,WAAD;AACG,IAAA,EAAE,EAAC,SADN;AAEG,IAAA,KAAK,EAAC,uBAFT;AAGG,IAAA,KAAK,EAAEN,YAHV;AAIG,IAAA,YAAY,EAAGS,KAAD,IAAWF,eAAe,CAACE,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAJ3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARH,eAcG,oBAAC,WAAD;AACG,IAAA,EAAE,EAAC,OADN;AAEG,IAAA,KAAK,EAAC,kDAFT;AAGG,IAAA,KAAK,EAAEJ,UAHV;AAIG,IAAA,YAAY,EAAGO,KAAD,IAAWD,aAAa,CAACC,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAJzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdH,eAoBG,oBAAC,MAAD;AACG,IAAA,UAAU,EAAC,0BADd;AAEG,IAAA,kBAAkB,EAAE,MACjBP,QAAQ,CAACP,WAAW,CAAC;AAAEY,MAAAA,SAAF;AAAaJ,MAAAA,YAAb;AAA2BE,MAAAA;AAA3B,KAAD,CAAZ,CAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBH,CADH;AA6BF,CAlDD;;AAoDA,eAAeP,aAAf","sourcesContent":["import React, { useState, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSettings } from \"../../redux/actions\";\nimport Button from \"../Button\";\nimport InputCounts from \"./InputCounts\";\n\nconst SettingsTable = () => {\n   const settings = useSelector((state) => state.matrix.settings);\n   const dispatch = useDispatch();\n   // const [rowsCount, setRowsCount] = useState(settings.rowsCount);\n   const [columnsCount, setColumnsCount] = useState(settings.columnsCount);\n   const [cellsCount, setCellsCount] = useState(settings.cellsCount);\n   let rowsCount = useMemo(() => {\n      return settings.rowsCount;\n   }, [settings.rowsCount]);\n\n   const setTableRows = (value) => {\n      // setRowsCount(+value);\n      rowsCount=+value;\n   };\n   const setTableColumns = (value) => {\n      setColumnsCount(+value);\n   };\n   const setTableCells = (value) => {\n      setCellsCount(+value);\n   };\n\n   return (\n      <div className=\"settings-table\">\n         <h1>Welcome to Matrix Builder</h1>\n         <InputCounts\n            id=\"rows\"\n            label=\"Set the rows count\"\n            value={rowsCount}\n            handleChange={(event) => setTableRows(event.target.value)}\n         />\n         <InputCounts\n            id=\"columns\"\n            label=\"Set the columns count\"\n            value={columnsCount}\n            handleChange={(event) => setTableColumns(event.target.value)}\n         />\n         <InputCounts\n            id=\"cells\"\n            label=\"Set the count of cells to show the nearest value\"\n            value={cellsCount}\n            handleChange={(event) => setTableCells(event.target.value)}\n         />\n         <Button\n            buttonText=\"Apply settings of matrix\"\n            buttonClickHandler={() =>\n               dispatch(setSettings({ rowsCount, columnsCount, cellsCount }))\n            }\n         />\n      </div>\n   );\n};\n\nexport default SettingsTable;\n"]},"metadata":{},"sourceType":"module"}