{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/TableRow/index.js\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { cellRenderers } from \"../../../../../CellRenderers\";\nimport { removeRow } from \"../../../../../redux/actions\";\nimport CrossButton from \"../../../../CrossButton\";\nimport TableCell from \"./TableCell\";\n\nconst TableRow = ({\n  rowCount,\n  data,\n  cellsSetting\n}) => {\n  const matrix = useSelector(state => state.matrix);\n  const sumRow = data.map(data => data.value).reduce((sum = 0, value) => sum + value);\n  const rowLabel = /*#__PURE__*/React.createElement(TableCell, {\n    key: rowCount,\n    value: rowCount,\n    Renderer: cellRenderers.static,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  });\n  const rowCells = data.map((cellData, index) => {\n    const percentOfSum = Math.round(cellData.value * 100 / sumRow);\n    return /*#__PURE__*/React.createElement(TableCell, {\n      key: cellData.id,\n      id: cellData.id,\n      value: cellData.value,\n      percent: percentOfSum,\n      Renderer: cellRenderers.increment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 10\n      }\n    });\n  });\n\n  const sumHoverHandler = () => {\n    console.log(rowCells);\n    /*  return rowCells.forEach((tableCell) => {\n        tableCell.props.Renderer = cellRenderers.percentage;\n     }); */\n  };\n\n  const sumRowCell = /*#__PURE__*/React.createElement(TableCell, {\n    key: sumRow,\n    value: sumRow,\n    Renderer: cellRenderers.sum,\n    sumHoverHandler: sumHoverHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  });\n  const cells = [rowLabel, ...rowCells, sumRowCell];\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, cells, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(CrossButton, {\n    buttonClickHandler: () => dispatch(removeRow(rowCount)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default TableRow;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/TableRow/index.js"],"names":["React","useDispatch","useSelector","cellRenderers","removeRow","CrossButton","TableCell","TableRow","rowCount","data","cellsSetting","matrix","state","sumRow","map","value","reduce","sum","rowLabel","static","rowCells","cellData","index","percentOfSum","Math","round","id","increment","sumHoverHandler","console","log","sumRowCell","cells","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA;AAAlB,CAAD,KAAsC;AACpD,QAAMC,MAAM,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACD,MAAlB,CAA1B;AACA,QAAME,MAAM,GAAGJ,IAAI,CACfK,GADW,CACNL,IAAD,IAAUA,IAAI,CAACM,KADR,EAEXC,MAFW,CAEJ,CAACC,GAAG,GAAG,CAAP,EAAUF,KAAV,KAAoBE,GAAG,GAAGF,KAFtB,CAAf;AAGA,QAAMG,QAAQ,gBACX,oBAAC,SAAD;AACG,IAAA,GAAG,EAAEV,QADR;AAEG,IAAA,KAAK,EAAEA,QAFV;AAGG,IAAA,QAAQ,EAAEL,aAAa,CAACgB,MAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH;AAOA,QAAMC,QAAQ,GAAGX,IAAI,CAACK,GAAL,CAAS,CAACO,QAAD,EAAWC,KAAX,KAAqB;AAC5C,UAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAYJ,QAAQ,CAACN,KAAT,GAAiB,GAAlB,GAAyBF,MAApC,CAArB;AACA,wBACG,oBAAC,SAAD;AACG,MAAA,GAAG,EAAEQ,QAAQ,CAACK,EADjB;AAEG,MAAA,EAAE,EAAEL,QAAQ,CAACK,EAFhB;AAGG,MAAA,KAAK,EAAEL,QAAQ,CAACN,KAHnB;AAIG,MAAA,OAAO,EAAEQ,YAJZ;AAKG,MAAA,QAAQ,EAAEpB,aAAa,CAACwB,SAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH;AASF,GAXgB,CAAjB;;AAYA,QAAMC,eAAe,GAAG,MAAM;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACD;;;AAGD,GALD;;AAMA,QAAMW,UAAU,gBACb,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAElB,MAAhB;AAAwB,IAAA,KAAK,EAAEA,MAA/B;AAAuC,IAAA,QAAQ,EAAEV,aAAa,CAACc,GAA/D;AAAoE,IAAA,eAAe,EAAEW,eAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH;AAGA,QAAMI,KAAK,GAAG,CAACd,QAAD,EAAW,GAAGE,QAAd,EAAwBW,UAAxB,CAAd;AACA,QAAME,QAAQ,GAAGhC,WAAW,EAA5B;AAEA,sBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI+B,KADJ,eAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,WAAD;AACG,IAAA,kBAAkB,EAAE,MAAMC,QAAQ,CAAC7B,SAAS,CAACI,QAAD,CAAV,CADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAFH,CADH;AAUF,CA9CD;;AAgDA,eAAeD,QAAf","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { cellRenderers } from \"../../../../../CellRenderers\";\nimport { removeRow } from \"../../../../../redux/actions\";\nimport CrossButton from \"../../../../CrossButton\";\nimport TableCell from \"./TableCell\";\n\nconst TableRow = ({ rowCount, data, cellsSetting }) => {\n   const matrix = useSelector((state) => state.matrix);\n   const sumRow = data\n      .map((data) => data.value)\n      .reduce((sum = 0, value) => sum + value);\n   const rowLabel = (\n      <TableCell\n         key={rowCount}\n         value={rowCount}\n         Renderer={cellRenderers.static}\n      />\n   );\n   const rowCells = data.map((cellData, index) => {\n      const percentOfSum = Math.round((cellData.value * 100) / sumRow);\n      return (\n         <TableCell\n            key={cellData.id}\n            id={cellData.id}\n            value={cellData.value}\n            percent={percentOfSum}\n            Renderer={cellRenderers.increment}\n         />\n      );\n   });\n   const sumHoverHandler = () => {\n      console.log(rowCells)\n     /*  return rowCells.forEach((tableCell) => {\n         tableCell.props.Renderer = cellRenderers.percentage;\n      }); */\n   };\n   const sumRowCell = (\n      <TableCell key={sumRow} value={sumRow} Renderer={cellRenderers.sum} sumHoverHandler={sumHoverHandler}/>\n   );\n   const cells = [rowLabel, ...rowCells, sumRowCell];\n   const dispatch = useDispatch();\n\n   return (\n      <tr>\n         {cells}\n         <td>\n            <CrossButton\n               buttonClickHandler={() => dispatch(removeRow(rowCount))}\n            />\n         </td>\n      </tr>\n   );\n};\n\nexport default TableRow;\n"]},"metadata":{},"sourceType":"module"}