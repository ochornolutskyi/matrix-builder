{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/SettingsTable/index.js\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createMatrix, setSettings } from \"../../redux/actions\";\nimport Button from \"../Button\";\nimport InputCounts from \"./InputCounts\";\nimport \"./StartPage.scss\";\n\nconst SettingsTable = () => {\n  const settings = useSelector(state => state.matrix.settings);\n  const dispatch = useDispatch();\n\n  const setTableRows = value => {\n    let newSettings = { ...settings\n    };\n    newSettings.rowsCount = value;\n    return newSettings;\n  };\n\n  const setTableColumns = value => {\n    let newSettings = { ...settings\n    };\n    newSettings.columnsCount = value;\n    return newSettings;\n  };\n\n  const setTableCells = value => {\n    let newSettings = { ...settings\n    };\n    newSettings.cellsCount = value;\n    return newSettings;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"start-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }\n  }, \"Welcome to Matrix Builder\"), /*#__PURE__*/React.createElement(InputCounts, {\n    id: \"rows\",\n    label: \"Set the rows count\",\n    value: settings.rowsCount,\n    handleChange: event => dispatch(setSettings(setTableRows(event.target.value))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(InputCounts, {\n    id: \"columns\",\n    label: \"Set the columns count\",\n    value: settings.columnsCount,\n    handleChange: event => dispatch(setSettings(setTableColumns(event.target.value))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(InputCounts, {\n    id: \"cells\",\n    label: \"Set the count of cells to show the nearest value\",\n    value: settings.cellsCount,\n    handleChange: event => dispatch(setSettings(setTableCells(event.target.value))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    buttonText: \"Apply settings of matrix\",\n    buttonClickHandler: () => dispatch(createMatrix()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 10\n    }\n  }));\n};\n\nexport default SettingsTable;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/SettingsTable/index.js"],"names":["React","useDispatch","useSelector","createMatrix","setSettings","Button","InputCounts","SettingsTable","settings","state","matrix","dispatch","setTableRows","value","newSettings","rowsCount","setTableColumns","columnsCount","setTableCells","cellsCount","event","target"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,qBAA1C;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,kBAAP;;AAEA,MAAMC,aAAa,GAAG,MAAM;AACzB,QAAMC,QAAQ,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaF,QAAzB,CAA5B;AACA,QAAMG,QAAQ,GAAGV,WAAW,EAA5B;;AAEA,QAAMW,YAAY,GAAIC,KAAD,IAAW;AAC7B,QAAIC,WAAW,GAAG,EAAE,GAAGN;AAAL,KAAlB;AACAM,IAAAA,WAAW,CAACC,SAAZ,GAAwBF,KAAxB;AACA,WAAOC,WAAP;AACF,GAJD;;AAKA,QAAME,eAAe,GAAIH,KAAD,IAAW;AAChC,QAAIC,WAAW,GAAG,EAAE,GAAGN;AAAL,KAAlB;AACAM,IAAAA,WAAW,CAACG,YAAZ,GAA2BJ,KAA3B;AACA,WAAOC,WAAP;AACF,GAJD;;AAKA,QAAMI,aAAa,GAAIL,KAAD,IAAW;AAC9B,QAAIC,WAAW,GAAG,EAAE,GAAGN;AAAL,KAAlB;AACAM,IAAAA,WAAW,CAACK,UAAZ,GAAyBN,KAAzB;AACA,WAAOC,WAAP;AACF,GAJD;;AAMA,sBACG;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADH,eAEG,oBAAC,WAAD;AACG,IAAA,EAAE,EAAC,MADN;AAEG,IAAA,KAAK,EAAC,oBAFT;AAGG,IAAA,KAAK,EAAEN,QAAQ,CAACO,SAHnB;AAIG,IAAA,YAAY,EAAGK,KAAD,IACXT,QAAQ,CAACP,WAAW,CAACQ,YAAY,CAACQ,KAAK,CAACC,MAAN,CAAaR,KAAd,CAAb,CAAZ,CALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,eAUG,oBAAC,WAAD;AACG,IAAA,EAAE,EAAC,SADN;AAEG,IAAA,KAAK,EAAC,uBAFT;AAGG,IAAA,KAAK,EAAEL,QAAQ,CAACS,YAHnB;AAIG,IAAA,YAAY,EAAGG,KAAD,IACXT,QAAQ,CAACP,WAAW,CAACY,eAAe,CAACI,KAAK,CAACC,MAAN,CAAaR,KAAd,CAAhB,CAAZ,CALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVH,eAkBG,oBAAC,WAAD;AACG,IAAA,EAAE,EAAC,OADN;AAEG,IAAA,KAAK,EAAC,kDAFT;AAGG,IAAA,KAAK,EAAEL,QAAQ,CAACW,UAHnB;AAIG,IAAA,YAAY,EAAGC,KAAD,IACXT,QAAQ,CAACP,WAAW,CAACc,aAAa,CAACE,KAAK,CAACC,MAAN,CAAaR,KAAd,CAAd,CAAZ,CALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBH,eA0BG,oBAAC,MAAD;AACG,IAAA,UAAU,EAAC,0BADd;AAEG,IAAA,kBAAkB,EAAE,MAAMF,QAAQ,CAACR,YAAY,EAAb,CAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BH,CADH;AAiCF,CArDD;;AAuDA,eAAeI,aAAf","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createMatrix, setSettings } from \"../../redux/actions\";\nimport Button from \"../Button\";\nimport InputCounts from \"./InputCounts\";\nimport \"./StartPage.scss\";\n\nconst SettingsTable = () => {\n   const settings = useSelector((state) => state.matrix.settings);\n   const dispatch = useDispatch();\n\n   const setTableRows = (value) => {\n      let newSettings = { ...settings };\n      newSettings.rowsCount = value;\n      return newSettings;\n   };\n   const setTableColumns = (value) => {\n      let newSettings = { ...settings };\n      newSettings.columnsCount = value;\n      return newSettings;\n   };\n   const setTableCells = (value) => {\n      let newSettings = { ...settings };\n      newSettings.cellsCount = value;\n      return newSettings;\n   };\n\n   return (\n      <div className=\"start-page\">\n         <h1>Welcome to Matrix Builder</h1>\n         <InputCounts\n            id=\"rows\"\n            label=\"Set the rows count\"\n            value={settings.rowsCount}\n            handleChange={(event) =>\n               dispatch(setSettings(setTableRows(event.target.value)))\n            }\n         />\n         <InputCounts\n            id=\"columns\"\n            label=\"Set the columns count\"\n            value={settings.columnsCount}\n            handleChange={(event) =>\n               dispatch(setSettings(setTableColumns(event.target.value)))\n            }\n         />\n         <InputCounts\n            id=\"cells\"\n            label=\"Set the count of cells to show the nearest value\"\n            value={settings.cellsCount}\n            handleChange={(event) =>\n               dispatch(setSettings(setTableCells(event.target.value)))\n            }\n         />\n         <Button\n            buttonText=\"Apply settings of matrix\"\n            buttonClickHandler={() => dispatch(createMatrix())}\n         />\n      </div>\n   );\n};\n\nexport default SettingsTable;\n"]},"metadata":{},"sourceType":"module"}