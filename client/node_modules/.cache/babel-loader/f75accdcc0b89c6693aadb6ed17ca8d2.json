{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/Table/TableBody/TableRow/index.js\";\nimport React from \"react\";\nimport RowCell from \"./RowCell\";\n\nconst TableRow = props => {\n  let rowCells = props.data.map((data, index) => {\n    if (index === 0) {\n      return /*#__PURE__*/React.createElement(RowCell, {\n        key: index,\n        value: data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 17\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(RowCell, {\n        key: data.id,\n        value: data.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 17\n        }\n      });\n    }\n  });\n  const rowValues = props.data.slice(1).map(data => data.value);\n  console.log(rowValues);\n  const sumRow = rowValues.reduce((sum, value) => sum + value);\n  rowCells.push( /*#__PURE__*/React.createElement(RowCell, {\n    key: sumRow,\n    value: sumRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 18\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, rowCells);\n};\n\nexport default TableRow;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/Table/TableBody/TableRow/index.js"],"names":["React","RowCell","TableRow","props","rowCells","data","map","index","id","value","rowValues","slice","console","log","sumRow","reduce","sum","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACzB,MAAIC,QAAQ,GAAGD,KAAK,CAACE,IAAN,CAAWC,GAAX,CAAe,CAACD,IAAD,EAAOE,KAAP,KAAiB;AAC5C,QAAIA,KAAK,KAAK,CAAd,EAAiB;AACd,0BAAO,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAEA,KAAd;AAAqB,QAAA,KAAK,EAAEF,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACF,KAFD,MAEO;AACJ,0BAAO,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAEA,IAAI,CAACG,EAAnB;AAAuB,QAAA,KAAK,EAAEH,IAAI,CAACI,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACF;AACH,GANc,CAAf;AAOA,QAAMC,SAAS,GAAGP,KAAK,CAACE,IAAN,CAAWM,KAAX,CAAiB,CAAjB,EAAoBL,GAApB,CAAyBD,IAAD,IAAUA,IAAI,CAACI,KAAvC,CAAlB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACA,QAAMI,MAAM,GAAGJ,SAAS,CAACK,MAAV,CAAiB,CAACC,GAAD,EAAMP,KAAN,KAAgBO,GAAG,GAAGP,KAAvC,CAAf;AACAL,EAAAA,QAAQ,CAACa,IAAT,eAAc,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEH,MAAd;AAAsB,IAAA,KAAK,EAAEA,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAd;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKV,QAAL,CAAP;AACF,CAbD;;AAeA,eAAeF,QAAf","sourcesContent":["import React from \"react\";\nimport RowCell from \"./RowCell\";\n\nconst TableRow = (props) => {\n   let rowCells = props.data.map((data, index) => {\n      if (index === 0) {\n         return <RowCell key={index} value={data} />;\n      } else {\n         return <RowCell key={data.id} value={data.value} />;\n      }\n   });\n   const rowValues = props.data.slice(1).map((data) => data.value);\n   console.log(rowValues);\n   const sumRow = rowValues.reduce((sum, value) => sum + value);\n   rowCells.push(<RowCell key={sumRow} value={sumRow} />);\n   return <tr>{rowCells}</tr>;\n};\n\nexport default TableRow;\n"]},"metadata":{},"sourceType":"module"}