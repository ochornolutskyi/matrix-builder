{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/RowFragment/index.js\";\nimport React, { useState } from \"react\";\nimport PercentageCell from \"../CellRenderer/PercentageCell\";\nimport StaticCell from \"../CellRenderer/StaticCell\";\nimport SumCell from \"../CellRenderer/SumCell\";\n\nconst RowFragment = ({\n  label,\n  RendererType,\n  rowData,\n  sumRow\n}) => {\n  const [showPercentageValue, setShowPercentageValue] = useState(false);\n  const Renderer = showPercentageValue ? PercentageCell : RendererType;\n  const rowCells = rowData.map(cellData => /*#__PURE__*/React.createElement(Renderer, {\n    key: cellData.id,\n    id: cellData.id,\n    value: cellData.value,\n    sumRow: sumRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }));\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StaticCell, {\n    key: label,\n    value: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }\n  }), rowCells, /*#__PURE__*/React.createElement(SumCell, {\n    key: sumRow,\n    value: sumRow,\n    sumMouseEnterHandler: () => setShowPercentageValue(true),\n    sumMouseLeaveHandler: () => setShowPercentageValue(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }\n  }));\n};\n\nexport default RowFragment;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/RowFragment/index.js"],"names":["React","useState","PercentageCell","StaticCell","SumCell","RowFragment","label","RendererType","rowData","sumRow","showPercentageValue","setShowPercentageValue","Renderer","rowCells","map","cellData","id","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,YAAT;AAAuBC,EAAAA,OAAvB;AAAgCC,EAAAA;AAAhC,CAAD,KAA8C;AAC/D,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDV,QAAQ,CAAC,KAAD,CAA9D;AACA,QAAMW,QAAQ,GAAGF,mBAAmB,GAAGR,cAAH,GAAoBK,YAAxD;AACA,QAAMM,QAAQ,GAAGL,OAAO,CAACM,GAAR,CAAaC,QAAD,iBAC1B,oBAAC,QAAD;AACG,IAAA,GAAG,EAAEA,QAAQ,CAACC,EADjB;AAEG,IAAA,EAAE,EAAED,QAAQ,CAACC,EAFhB;AAGG,IAAA,KAAK,EAAED,QAAQ,CAACE,KAHnB;AAIG,IAAA,MAAM,EAAER,MAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,CAAjB;AASA,sBACG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,UAAD;AACG,IAAA,GAAG,EAAEH,KADR;AAEG,IAAA,KAAK,EAAEA,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAKIO,QALJ,eAMG,oBAAC,OAAD;AACG,IAAA,GAAG,EAAEJ,MADR;AAEG,IAAA,KAAK,EAAEA,MAFV;AAGG,IAAA,oBAAoB,EAAE,MAAME,sBAAsB,CAAC,IAAD,CAHrD;AAIG,IAAA,oBAAoB,EAAE,MAAMA,sBAAsB,CAAC,KAAD,CAJrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANH,CADH;AAeF,CA3BD;;AA6BA,eAAeN,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport PercentageCell from \"../CellRenderer/PercentageCell\";\nimport StaticCell from \"../CellRenderer/StaticCell\";\nimport SumCell from \"../CellRenderer/SumCell\";\n\nconst RowFragment = ({ label, RendererType, rowData, sumRow }) => {\n   const [showPercentageValue, setShowPercentageValue] = useState(false);\n   const Renderer = showPercentageValue ? PercentageCell : RendererType;\n   const rowCells = rowData.map((cellData) => (\n      <Renderer\n         key={cellData.id}\n         id={cellData.id}\n         value={cellData.value}\n         sumRow={sumRow}\n      />\n   ));\n\n   return (\n      <React.Fragment>\n         <StaticCell\n            key={label}\n            value={label}\n         />\n         {rowCells}\n         <SumCell\n            key={sumRow}\n            value={sumRow}\n            sumMouseEnterHandler={() => setShowPercentageValue(true)}\n            sumMouseLeaveHandler={() => setShowPercentageValue(false)}\n         />\n      </React.Fragment>\n   );\n};\n\nexport default RowFragment;\n"]},"metadata":{},"sourceType":"module"}