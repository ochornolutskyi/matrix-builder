{"ast":null,"code":"import { INCREMENT_CELL, CREATE_MATRIX, REMOVE_ROW, ADD_ROW, SET_NEAREST_IDS } from \"./types\";\nexport const createMatrix = settings => {\n  return {\n    type: CREATE_MATRIX,\n    settings\n  };\n};\nexport const incrementCell = (id, value) => {\n  return {\n    type: INCREMENT_CELL,\n    id,\n    value\n  };\n};\nexport const removeRow = rowCount => {\n  return {\n    type: REMOVE_ROW,\n    index: rowCount - 1\n  };\n};\nexport const addRow = columnsCount => {\n  return {\n    type: ADD_ROW,\n    columnsCount\n  };\n};\nexport const setNearestValues = (cellsCount, ids) => {\n  return {\n    type: SET_NEAREST_IDS,\n    cellsCount,\n    ids\n  };\n};","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/redux/actions.js"],"names":["INCREMENT_CELL","CREATE_MATRIX","REMOVE_ROW","ADD_ROW","SET_NEAREST_IDS","createMatrix","settings","type","incrementCell","id","value","removeRow","rowCount","index","addRow","columnsCount","setNearestValues","cellsCount","ids"],"mappings":"AAAA,SACGA,cADH,EAEGC,aAFH,EAGGC,UAHH,EAIGC,OAJH,EAKGC,eALH,QAMO,SANP;AAQA,OAAO,MAAMC,YAAY,GAAIC,QAAD,IAAc;AACvC,SAAO;AACJC,IAAAA,IAAI,EAAEN,aADF;AAEJK,IAAAA;AAFI,GAAP;AAIF,CALM;AAOP,OAAO,MAAME,aAAa,GAAG,CAACC,EAAD,EAAKC,KAAL,KAAe;AACzC,SAAO;AACJH,IAAAA,IAAI,EAAEP,cADF;AAEJS,IAAAA,EAFI;AAGJC,IAAAA;AAHI,GAAP;AAKF,CANM;AAQP,OAAO,MAAMC,SAAS,GAAIC,QAAD,IAAc;AACpC,SAAO;AACJL,IAAAA,IAAI,EAAEL,UADF;AAEJW,IAAAA,KAAK,EAAED,QAAQ,GAAG;AAFd,GAAP;AAIF,CALM;AAOP,OAAO,MAAME,MAAM,GAAIC,YAAD,IAAkB;AACrC,SAAO;AACJR,IAAAA,IAAI,EAAEJ,OADF;AAEJY,IAAAA;AAFI,GAAP;AAIF,CALM;AAOP,OAAO,MAAMC,gBAAgB,GAAG,CAACC,UAAD,EAAaC,GAAb,KAAqB;AAClD,SAAO;AACJX,IAAAA,IAAI,EAAEH,eADF;AAEJa,IAAAA,UAFI;AAGJC,IAAAA;AAHI,GAAP;AAKF,CANM","sourcesContent":["import {\n   INCREMENT_CELL,\n   CREATE_MATRIX,\n   REMOVE_ROW,\n   ADD_ROW,\n   SET_NEAREST_IDS,\n} from \"./types\";\n\nexport const createMatrix = (settings) => {\n   return {\n      type: CREATE_MATRIX,\n      settings,\n   };\n};\n\nexport const incrementCell = (id, value) => {\n   return {\n      type: INCREMENT_CELL,\n      id,\n      value,\n   };\n};\n\nexport const removeRow = (rowCount) => {\n   return {\n      type: REMOVE_ROW,\n      index: rowCount - 1,\n   };\n};\n\nexport const addRow = (columnsCount) => {\n   return {\n      type: ADD_ROW,\n      columnsCount,\n   };\n};\n\nexport const setNearestValues = (cellsCount, ids) => {\n   return {\n      type: SET_NEAREST_IDS,\n      cellsCount,\n      ids,\n   };\n};\n"]},"metadata":{},"sourceType":"module"}