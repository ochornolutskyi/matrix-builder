{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/TableRow/TableCell/CellRenderer/IncrementCell.js\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { incrementCell, setNearestValues } from \"../../../../../../../redux/actions\";\n\nconst IncrementCell = ({\n  id,\n  value,\n  cellsSetting\n}) => {\n  const nearestIds = useSelector(state => state.matrix.nearestIds);\n  const isNearest = nearestIds.find(id => id === id) ? true : false;\n  isNearest = {\n    isNearest\n  };\n  const dispatch = useDispatch();\n  let style = isNearest ? {\n    backgroundColor: \"aqua\"\n  } : null;\n  console.log(cellsSetting);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: style,\n    onMouseEnter: () => dispatch(setNearestValues(cellsSetting, value)),\n    onMouseLeave: () => style = null,\n    onClick: () => dispatch(incrementCell(id, value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, value);\n};\n\nexport default IncrementCell;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/TableRow/TableCell/CellRenderer/IncrementCell.js"],"names":["React","useDispatch","useSelector","incrementCell","setNearestValues","IncrementCell","id","value","cellsSetting","nearestIds","state","matrix","isNearest","find","dispatch","style","backgroundColor","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACGC,aADH,EAEGC,gBAFH,QAGO,oCAHP;;AAKA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,KAAN;AAAaC,EAAAA;AAAb,CAAD,KAAiC;AACpD,QAAMC,UAAU,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaF,UAAzB,CAA9B;AACA,QAAMG,SAAS,GAAGH,UAAU,CAACI,IAAX,CAAiBP,EAAD,IAAQA,EAAE,KAAKA,EAA/B,IAAqC,IAArC,GAA4C,KAA9D;AACAM,EAAAA,SAAS,GAAG;AAAEA,IAAAA;AAAF,GAAZ;AAEA,QAAME,QAAQ,GAAGb,WAAW,EAA5B;AACA,MAAIc,KAAK,GAAGH,SAAS,GAAG;AAAEI,IAAAA,eAAe,EAAE;AAAnB,GAAH,GAAiC,IAAtD;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ;AAEA,sBACG;AACG,IAAA,KAAK,EAAEO,KADV;AAEG,IAAA,YAAY,EAAE,MAAMD,QAAQ,CAACV,gBAAgB,CAACI,YAAD,EAAeD,KAAf,CAAjB,CAF/B;AAGG,IAAA,YAAY,EAAE,MAAOQ,KAAK,GAAG,IAHhC;AAIG,IAAA,OAAO,EAAE,MAAMD,QAAQ,CAACX,aAAa,CAACG,EAAD,EAAKC,KAAL,CAAd,CAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMIA,KANJ,CADH;AAUF,CAnBD;;AAqBA,eAAeF,aAAf","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n   incrementCell,\n   setNearestValues,\n} from \"../../../../../../../redux/actions\";\n\nconst IncrementCell = ({ id, value, cellsSetting }) => {\n   const nearestIds = useSelector((state) => state.matrix.nearestIds);\n   const isNearest = nearestIds.find((id) => id === id) ? true : false;\n   isNearest = { isNearest };\n\n   const dispatch = useDispatch();\n   let style = isNearest ? { backgroundColor: \"aqua\" } : null;\n   console.log(cellsSetting);\n\n   return (\n      <div\n         style={style}\n         onMouseEnter={() => dispatch(setNearestValues(cellsSetting, value))}\n         onMouseLeave={() => (style = null)}\n         onClick={() => dispatch(incrementCell(id, value))}\n      >\n         {value}\n      </div>\n   );\n};\n\nexport default IncrementCell;\n"]},"metadata":{},"sourceType":"module"}