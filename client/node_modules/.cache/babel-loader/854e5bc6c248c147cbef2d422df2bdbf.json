{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/StartPage/StartPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport InputCounts from \"./InputCounts\";\nimport \"./StartPage.scss\";\n\nconst StartPage = props => {\n  const [rows, setRows] = useState(0);\n  const [columns, setColumns] = useState(0);\n  const [cells, setCells] = useState(0);\n\n  const handleChangeRows = event => {\n    setRows(event.target.value);\n  };\n\n  const handleChangeColumns = event => {\n    setColumns(event.target.value);\n  };\n\n  const handleChangeCells = event => {\n    setCells(event.target.value);\n  };\n\n  const createMatrix = (rowsCount, columnsCount) => {\n    let matrix = [];\n\n    if (rowsCount === 0 || columnsCount === 0) {\n      console.log(\"counts can't be 0\");\n    } else {\n      const createRows = () => {\n        for (let i = 0; i < rowsCount; i++) {\n          const row = [];\n          matrix.push(row);\n        }\n      };\n\n      const createColumns = () => {\n        matrix.forEach((item, index) => {\n          for (let i = 0; i < columnsCount; i++) {\n            const cellObject = {\n              id: String(index + 1).concat(i + 1),\n              value: Math.round(100 + Math.random() * 899)\n            };\n            item.push(cellObject);\n          }\n        });\n      };\n\n      createRows();\n      createColumns();\n    }\n\n    props.createMatrix(matrix);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"start-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }\n  }, \"Welcome to Matrix Builder\"), /*#__PURE__*/React.createElement(InputCounts, {\n    id: \"rows\",\n    label: \"Set the rows count\",\n    handleChange: handleChangeRows,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(InputCounts, {\n    id: \"columns\",\n    label: \"Set the columns count\",\n    handleChange: handleChangeColumns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(InputCounts, {\n    id: \"cells\",\n    label: \"Set the count of cells to show the nearest value\",\n    handleChange: handleChangeCells,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => createMatrix(rows, columns),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 10\n    }\n  }, \"Apply settings of matrix\"));\n};\n\nexport default StartPage;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/StartPage/StartPage.js"],"names":["React","useState","useEffect","InputCounts","StartPage","props","rows","setRows","columns","setColumns","cells","setCells","handleChangeRows","event","target","value","handleChangeColumns","handleChangeCells","createMatrix","rowsCount","columnsCount","matrix","console","log","createRows","i","row","push","createColumns","forEach","item","index","cellObject","id","String","concat","Math","round","random"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport InputCounts from \"./InputCounts\";\nimport \"./StartPage.scss\";\n\nconst StartPage = (props) => {\n   const [rows, setRows] = useState(0);\n   const [columns, setColumns] = useState(0);\n   const [cells, setCells] = useState(0);\n\n   const handleChangeRows = (event) => {\n      setRows(event.target.value);\n   };\n   const handleChangeColumns = (event) => {\n      setColumns(event.target.value);\n   };\n   const handleChangeCells = (event) => {\n      setCells(event.target.value);\n   };\n   const createMatrix = (rowsCount, columnsCount) => {\n      let matrix = [];\n      if (rowsCount === 0 || columnsCount === 0) {\n         console.log(\"counts can't be 0\");\n      } else {\n         const createRows = () => {\n            for (let i = 0; i < rowsCount; i++) {\n               const row = [];\n               matrix.push(row);\n            }\n         };\n         const createColumns = () => {\n            matrix.forEach((item, index) => {\n               for (let i = 0; i < columnsCount; i++) {\n                  const cellObject = {\n                     id: String(index + 1).concat(i + 1),\n                     value: Math.round(100 + Math.random() * 899),\n                  };\n                  item.push(cellObject);\n               }\n            });\n         };\n         createRows();\n         createColumns();\n      }\n      props.createMatrix(matrix);\n   };\n\n   return (\n      <div className=\"start-page\">\n         <h1>Welcome to Matrix Builder</h1>\n         <InputCounts\n            id=\"rows\"\n            label=\"Set the rows count\"\n            handleChange={handleChangeRows}\n         />\n         <InputCounts\n            id=\"columns\"\n            label=\"Set the columns count\"\n            handleChange={handleChangeColumns}\n         />\n         <InputCounts\n            id=\"cells\"\n            label=\"Set the count of cells to show the nearest value\"\n            handleChange={handleChangeCells}\n         />\n         <button onClick={() => createMatrix(rows, columns)}>\n            Apply settings of matrix\n         </button>\n      </div>\n   );\n};\n\nexport default StartPage;\n"]},"metadata":{},"sourceType":"module"}