{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/TableRow/index.js\";\nimport React, { useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { removeRow } from \"../../../../../redux/actions\";\nimport CrossButton from \"../../../../CrossButton\";\nimport IncrementCell from \"./TableCell/IncrementCell\";\nimport StaticCell from \"./TableCell/StaticCell\";\nimport SumCell from \"./TableCell/SumCell\";\n/* const showPercentage = (ref) => {\n   // return (ref.style.background = \"red\");\n}; */\n\nconst hoverCellHandler = (data, value, cellsSetting) => {\n  if (cellsSetting) {\n    const generalData = data.reduce((currentData, nextData) => currentData.concat(nextData));\n    const values = generalData.map(item => item.value).sort((a, b) => a - b);\n    console.log(values, value);\n  }\n};\n\nconst TableRow = ({\n  rowCount,\n  data,\n  cellsSetting\n}) => {\n  const matrix = useSelector(state => state.matrix); // const cellRef = useRef([]);\n\n  const sumRow = data.map(data => data.value).reduce((sum = 0, value) => sum + value);\n  const rowLabel = /*#__PURE__*/React.createElement(StaticCell, {\n    key: rowCount,\n    value: rowCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  });\n  const rowCells = data.map((cellData, index) => {\n    // const percentOfSum = Math.round((cellData.value * 100) / sumRow);\n    return /*#__PURE__*/React.createElement(IncrementCell, {\n      key: cellData.id,\n      id: cellData.id,\n      value: cellData.value // percent={percentOfSum}\n      // ref={cellRef[index]}\n      ,\n      hoverCellHandler: () => hoverCellHandler(matrix, cellData.value, cellsSetting),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 10\n      }\n    });\n  });\n  const sumRowCell = /*#__PURE__*/React.createElement(SumCell, {\n    key: sumRow,\n    value: sumRow // hoverHandler={() => showPercentage(cellRef)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  });\n  const cells = [rowLabel, ...rowCells, sumRowCell];\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, cells, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(CrossButton, {\n    buttonClickHandler: () => dispatch(removeRow(rowCount)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default TableRow;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/TableRow/index.js"],"names":["React","useRef","useDispatch","useSelector","removeRow","CrossButton","IncrementCell","StaticCell","SumCell","hoverCellHandler","data","value","cellsSetting","generalData","reduce","currentData","nextData","concat","values","map","item","sort","a","b","console","log","TableRow","rowCount","matrix","state","sumRow","sum","rowLabel","rowCells","cellData","index","id","sumRowCell","cells","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA;;;;AAGA,MAAMC,gBAAgB,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcC,YAAd,KAA+B;AACrD,MAAIA,YAAJ,EAAkB;AACf,UAAMC,WAAW,GAAGH,IAAI,CAACI,MAAL,CAAY,CAACC,WAAD,EAAcC,QAAd,KAC7BD,WAAW,CAACE,MAAZ,CAAmBD,QAAnB,CADiB,CAApB;AAGA,UAAME,MAAM,GAAGL,WAAW,CAACM,GAAZ,CAAiBC,IAAD,IAAUA,IAAI,CAACT,KAA/B,EAAsCU,IAAtC,CAA2C,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAzD,CAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ,EAAoBP,KAApB;AACF;AACH,CARD;;AAUA,MAAMe,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYjB,EAAAA,IAAZ;AAAkBE,EAAAA;AAAlB,CAAD,KAAsC;AACpD,QAAMgB,MAAM,GAAGzB,WAAW,CAAE0B,KAAD,IAAWA,KAAK,CAACD,MAAlB,CAA1B,CADoD,CAEpD;;AACA,QAAME,MAAM,GAAGpB,IAAI,CACfS,GADW,CACNT,IAAD,IAAUA,IAAI,CAACC,KADR,EAEXG,MAFW,CAEJ,CAACiB,GAAG,GAAG,CAAP,EAAUpB,KAAV,KAAoBoB,GAAG,GAAGpB,KAFtB,CAAf;AAGA,QAAMqB,QAAQ,gBAAG,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEL,QAAjB;AAA2B,IAAA,KAAK,EAAEA,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjB;AACA,QAAMM,QAAQ,GAAGvB,IAAI,CAACS,GAAL,CAAS,CAACe,QAAD,EAAWC,KAAX,KAAqB;AAC5C;AACA,wBACG,oBAAC,aAAD;AACG,MAAA,GAAG,EAAED,QAAQ,CAACE,EADjB;AAEG,MAAA,EAAE,EAAEF,QAAQ,CAACE,EAFhB;AAGG,MAAA,KAAK,EAAEF,QAAQ,CAACvB,KAHnB,CAIG;AACA;AALH;AAMG,MAAA,gBAAgB,EAAE,MACfF,gBAAgB,CAACmB,MAAD,EAASM,QAAQ,CAACvB,KAAlB,EAAyBC,YAAzB,CAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH;AAYF,GAdgB,CAAjB;AAeA,QAAMyB,UAAU,gBACb,oBAAC,OAAD;AACG,IAAA,GAAG,EAAEP,MADR;AAEG,IAAA,KAAK,EAAEA,MAFV,CAGG;AAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH;AAOA,QAAMQ,KAAK,GAAG,CAACN,QAAD,EAAW,GAAGC,QAAd,EAAwBI,UAAxB,CAAd;AACA,QAAME,QAAQ,GAAGrC,WAAW,EAA5B;AAEA,sBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIoC,KADJ,eAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,WAAD;AACG,IAAA,kBAAkB,EAAE,MAAMC,QAAQ,CAACnC,SAAS,CAACuB,QAAD,CAAV,CADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAFH,CADH;AAUF,CA1CD;;AA4CA,eAAeD,QAAf","sourcesContent":["import React, { useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { removeRow } from \"../../../../../redux/actions\";\nimport CrossButton from \"../../../../CrossButton\";\nimport IncrementCell from \"./TableCell/IncrementCell\";\nimport StaticCell from \"./TableCell/StaticCell\";\nimport SumCell from \"./TableCell/SumCell\";\n\n/* const showPercentage = (ref) => {\n   // return (ref.style.background = \"red\");\n}; */\nconst hoverCellHandler = (data, value, cellsSetting) => {\n   if (cellsSetting) {\n      const generalData = data.reduce((currentData, nextData) =>\n         currentData.concat(nextData)\n      );\n      const values = generalData.map((item) => item.value).sort((a, b) => a - b)\n      console.log(values, value);\n   }\n};\n\nconst TableRow = ({ rowCount, data, cellsSetting }) => {\n   const matrix = useSelector((state) => state.matrix);\n   // const cellRef = useRef([]);\n   const sumRow = data\n      .map((data) => data.value)\n      .reduce((sum = 0, value) => sum + value);\n   const rowLabel = <StaticCell key={rowCount} value={rowCount} />;\n   const rowCells = data.map((cellData, index) => {\n      // const percentOfSum = Math.round((cellData.value * 100) / sumRow);\n      return (\n         <IncrementCell\n            key={cellData.id}\n            id={cellData.id}\n            value={cellData.value}\n            // percent={percentOfSum}\n            // ref={cellRef[index]}\n            hoverCellHandler={() =>\n               hoverCellHandler(matrix, cellData.value, cellsSetting)\n            }\n         />\n      );\n   });\n   const sumRowCell = (\n      <SumCell\n         key={sumRow}\n         value={sumRow}\n         // hoverHandler={() => showPercentage(cellRef)}\n      />\n   );\n   const cells = [rowLabel, ...rowCells, sumRowCell];\n   const dispatch = useDispatch();\n\n   return (\n      <tr>\n         {cells}\n         <td>\n            <CrossButton\n               buttonClickHandler={() => dispatch(removeRow(rowCount))}\n            />\n         </td>\n      </tr>\n   );\n};\n\nexport default TableRow;\n"]},"metadata":{},"sourceType":"module"}