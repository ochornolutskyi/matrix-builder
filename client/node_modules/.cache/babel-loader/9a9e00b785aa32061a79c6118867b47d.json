{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/Table/TableBody/AverageRow/index.js\";\nimport React, { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport NumerableCell from \"../TableRow/TableCell/NumerableCell\";\n\nconst AverageRow = () => {\n  const columns = useSelector(state => state.matrix.settings.columns);\n  const data = useSelector(state => state.matrix.data.map(item => item.filter(data => data.value).map(row => row.value)));\n  const averageValues = useMemo(() => {\n    //current row values and next row values return the sum of values by equal index\n    return data.reduce((current, next) => current.map((value, index) => value + next[index])).map(value => value / data.length);\n  }, [data]);\n  let averageCells = averageValues.map((value, index) => /*#__PURE__*/React.createElement(NumerableCell, {\n    key: index,\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 30\n    }\n  })).unshift( /*#__PURE__*/React.createElement(NumerableCell, {\n    key: \"avg\",\n    value: \"Avg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }\n  }));\n  console.log(averageCells);\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, averageCells);\n};\n\nexport default AverageRow;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/Table/TableBody/AverageRow/index.js"],"names":["React","useMemo","useSelector","NumerableCell","AverageRow","columns","state","matrix","settings","data","map","item","filter","value","row","averageValues","reduce","current","next","index","length","averageCells","unshift","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,aAAP,MAA0B,qCAA1B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACtB,QAAMC,OAAO,GAAGH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaC,QAAb,CAAsBH,OAAlC,CAA3B;AACA,QAAMI,IAAI,GAAGP,WAAW,CAAEI,KAAD,IACtBA,KAAK,CAACC,MAAN,CAAaE,IAAb,CAAkBC,GAAlB,CAAuBC,IAAD,IACnBA,IAAI,CAACC,MAAL,CAAaH,IAAD,IAAUA,IAAI,CAACI,KAA3B,EAAkCH,GAAlC,CAAuCI,GAAD,IAASA,GAAG,CAACD,KAAnD,CADH,CADqB,CAAxB;AAKA,QAAME,aAAa,GAAGd,OAAO,CAAC,MAAM;AACjC;AACA,WAAOQ,IAAI,CACPO,MADG,CACI,CAACC,OAAD,EAAUC,IAAV,KACLD,OAAO,CAACP,GAAR,CAAY,CAACG,KAAD,EAAQM,KAAR,KAAkBN,KAAK,GAAGK,IAAI,CAACC,KAAD,CAA1C,CAFC,EAIHT,GAJG,CAIEG,KAAD,IAAWA,KAAK,GAAGJ,IAAI,CAACW,MAJzB,CAAP;AAKF,GAP4B,EAO1B,CAACX,IAAD,CAP0B,CAA7B;AAQA,MAAIY,YAAY,GAAGN,aAAa,CAC5BL,GADe,CACX,CAACG,KAAD,EAAQM,KAAR,kBAAkB,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,KAApB;AAA2B,IAAA,KAAK,EAAEN,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADP,EAEfS,OAFe,eAEP,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAE,KAApB;AAA2B,IAAA,KAAK,EAAC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFO,CAAnB;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,YAAL,CAAP;AACF,CAtBD;;AAwBA,eAAejB,UAAf","sourcesContent":["import React, { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport NumerableCell from \"../TableRow/TableCell/NumerableCell\";\n\nconst AverageRow = () => {\n   const columns = useSelector((state) => state.matrix.settings.columns);\n   const data = useSelector((state) =>\n      state.matrix.data.map((item) =>\n         item.filter((data) => data.value).map((row) => row.value)\n      )\n   );\n   const averageValues = useMemo(() => {\n      //current row values and next row values return the sum of values by equal index\n      return data\n         .reduce((current, next) =>\n            current.map((value, index) => value + next[index])\n         )\n         .map((value) => value / data.length);\n   }, [data]);\n   let averageCells = averageValues\n      .map((value, index) => <NumerableCell key={index} value={value} />)\n      .unshift(<NumerableCell key={\"avg\"} value=\"Avg\" />);\n\n   console.log(averageCells);\n\n   return <tr>{averageCells}</tr>;\n};\n\nexport default AverageRow;\n"]},"metadata":{},"sourceType":"module"}