{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/StartPage/StartPage.js\";\nimport React, { useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setMatrixRows } from \"../../redux/actions\";\nimport InputCounts from \"./InputCounts\";\nimport \"./StartPage.scss\";\n\nconst createMatrixRows = matrixSettings => {\n  let matrixData = [];\n  console.log(matrixSettings);\n\n  for (let i = 0; i < matrixSettings.rows; i++) {\n    matrixData.push([]);\n  }\n\n  console.log(matrixData);\n  return matrixData;\n};\n\nconst StartPage = () => {\n  const matrixSettings = useSelector(state => state.settings);\n  console.log(matrixSettings);\n  const dispatch = useDispatch();\n\n  const createMatrix = matrixSettings => {\n    createMatrixRows(matrixSettings);\n  };\n  /*  const createMatrix = (rowsCount, columnsCount) => {\n     let matrix = [];\n     if (rowsCount === 0 || columnsCount === 0) {\n        console.log(\"counts can't be 0\");\n     } else {\n        const createRows = () => {\n           for (let i = 0; i < rowsCount; i++) {\n              matrix.push([]);\n           }\n        };\n        const createColumns = () => {\n           matrix.forEach((item, index) => {\n              for (let i = 0; i < columnsCount; i++) {\n                 const cellObject = {\n                    id: String(index + 1).concat(i + 1),\n                    value: Math.round(100 + Math.random() * 899),\n                 };\n                 item.push(cellObject);\n              }\n           });\n        };\n        createRows();\n        createColumns();\n     }\n     props.createMatrix(matrix);\n  }; */\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"start-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 10\n    }\n  }, \"Welcome to Matrix Builder\"), /*#__PURE__*/React.createElement(InputCounts, {\n    id: \"rows\",\n    label: \"Set the rows count\",\n    handleChange: event => dispatch(setMatrixRows(event.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(InputCounts, {\n    id: \"columns\",\n    label: \"Set the columns count\" // handleChange={handleChangeColumns}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(InputCounts, {\n    id: \"cells\",\n    label: \"Set the count of cells to show the nearest value\" // handleChange={handleChangeCells}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => createMatrix(matrixSettings),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 10\n    }\n  }, \"Apply settings of matrix\"));\n};\n\nexport default StartPage;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/StartPage/StartPage.js"],"names":["React","useEffect","useMemo","useDispatch","useSelector","setMatrixRows","InputCounts","createMatrixRows","matrixSettings","matrixData","console","log","i","rows","push","StartPage","state","settings","dispatch","createMatrix","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,QAA0C,OAA1C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,kBAAP;;AAEA,MAAMC,gBAAgB,GAAIC,cAAD,IAAoB;AAC1C,MAAIC,UAAU,GAAG,EAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;;AACA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,cAAc,CAACK,IAAnC,EAAyCD,CAAC,EAA1C,EAA8C;AAC3CH,IAAAA,UAAU,CAACK,IAAX,CAAgB,EAAhB;AACF;;AACDJ,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,SAAOA,UAAP;AACF,CARD;;AAUA,MAAMM,SAAS,GAAG,MAAM;AACrB,QAAMP,cAAc,GAAGJ,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACC,QAAlB,CAAlC;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;AACA,QAAMU,QAAQ,GAAGf,WAAW,EAA5B;;AAEA,QAAMgB,YAAY,GAAIX,cAAD,IAAoB;AACtCD,IAAAA,gBAAgB,CAACC,cAAD,CAAhB;AACF,GAFD;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,sBACG;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADH,eAEG,oBAAC,WAAD;AACG,IAAA,EAAE,EAAC,MADN;AAEG,IAAA,KAAK,EAAC,oBAFT;AAGG,IAAA,YAAY,EAAGY,KAAD,IACXF,QAAQ,CAACb,aAAa,CAACe,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd,CAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,eASG,oBAAC,WAAD;AACG,IAAA,EAAE,EAAC,SADN;AAEG,IAAA,KAAK,EAAC,uBAFT,CAGG;AAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATH,eAcG,oBAAC,WAAD;AACG,IAAA,EAAE,EAAC,OADN;AAEG,IAAA,KAAK,EAAC,kDAFT,CAGG;AAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdH,eAmBG;AAAQ,IAAA,OAAO,EAAE,MAAMH,YAAY,CAACX,cAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAnBH,CADH;AAyBF,CA7DD;;AA+DA,eAAeO,SAAf","sourcesContent":["import React, { useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setMatrixRows } from \"../../redux/actions\";\nimport InputCounts from \"./InputCounts\";\nimport \"./StartPage.scss\";\n\nconst createMatrixRows = (matrixSettings) => {\n   let matrixData = [];\n   console.log(matrixSettings)\n   for (let i = 0; i < matrixSettings.rows; i++) {\n      matrixData.push([]);\n   }\n   console.log(matrixData)\n   return matrixData;\n};\n\nconst StartPage = () => {\n   const matrixSettings = useSelector((state) => state.settings);\n   console.log(matrixSettings)\n   const dispatch = useDispatch();\n\n   const createMatrix = (matrixSettings) => {\n      createMatrixRows(matrixSettings);\n   };\n\n   /*  const createMatrix = (rowsCount, columnsCount) => {\n      let matrix = [];\n      if (rowsCount === 0 || columnsCount === 0) {\n         console.log(\"counts can't be 0\");\n      } else {\n         const createRows = () => {\n            for (let i = 0; i < rowsCount; i++) {\n               matrix.push([]);\n            }\n         };\n         const createColumns = () => {\n            matrix.forEach((item, index) => {\n               for (let i = 0; i < columnsCount; i++) {\n                  const cellObject = {\n                     id: String(index + 1).concat(i + 1),\n                     value: Math.round(100 + Math.random() * 899),\n                  };\n                  item.push(cellObject);\n               }\n            });\n         };\n         createRows();\n         createColumns();\n      }\n      props.createMatrix(matrix);\n   }; */\n\n   return (\n      <div className=\"start-page\">\n         <h1>Welcome to Matrix Builder</h1>\n         <InputCounts\n            id=\"rows\"\n            label=\"Set the rows count\"\n            handleChange={(event) =>\n               dispatch(setMatrixRows(event.target.value))\n            }\n         />\n         <InputCounts\n            id=\"columns\"\n            label=\"Set the columns count\"\n            // handleChange={handleChangeColumns}\n         />\n         <InputCounts\n            id=\"cells\"\n            label=\"Set the count of cells to show the nearest value\"\n            // handleChange={handleChangeCells}\n         />\n         <button onClick={() => createMatrix(matrixSettings)}>\n            Apply settings of matrix\n         </button>\n      </div>\n   );\n};\n\nexport default StartPage;\n"]},"metadata":{},"sourceType":"module"}