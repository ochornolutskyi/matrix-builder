{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/RowFragment/index.js\";\nimport React, { useState } from \"react\";\nimport PercentageCell from \"../CellRenderer/PercentageCell\";\n\nconst RowFragment = ({\n  label,\n  RendererType,\n  rowData\n}) => {\n  const sumRow = rowValues.reduce((sum, value) => sum + value, 0).toFixed(2);\n  const [showPercentageValue, setShowPercentageValue] = useState(false);\n  const Renderer = showPercentageValue ? PercentageCell : RendererType;\n  const rowCells = data.map(cellData => /*#__PURE__*/React.createElement(Renderer, {\n    key: cellData.id,\n    id: cellData.id,\n    value: cellData.value,\n    sumRow: sumRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }));\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StaticCell // key={label}\n  , {\n    value: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }\n  }), rowCells, /*#__PURE__*/React.createElement(SumCell, {\n    key: sumRow,\n    value: sumRow,\n    sumMouseEnterHandler: () => setShowPercentageValue(true),\n    sumMouseLeaveHandler: () => setShowPercentageValue(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }\n  }));\n};\n\nexport default RowFragment;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/RowFragment/index.js"],"names":["React","useState","PercentageCell","RowFragment","label","RendererType","rowData","sumRow","rowValues","reduce","sum","value","toFixed","showPercentageValue","setShowPercentageValue","Renderer","rowCells","data","map","cellData","id"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,cAAP,MAA2B,gCAA3B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,YAAT;AAAuBC,EAAAA;AAAvB,CAAD,KAAsC;AACvD,QAAMC,MAAM,GAAGC,SAAS,CAACC,MAAV,CAAiB,CAACC,GAAD,EAAMC,KAAN,KAAgBD,GAAG,GAAGC,KAAvC,EAA8C,CAA9C,EAAiDC,OAAjD,CAAyD,CAAzD,CAAf;AACA,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDb,QAAQ,CAAC,KAAD,CAA9D;AACA,QAAMc,QAAQ,GAAGF,mBAAmB,GAAGX,cAAH,GAAoBG,YAAxD;AACA,QAAMW,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAAUC,QAAD,iBACvB,oBAAC,QAAD;AACG,IAAA,GAAG,EAAEA,QAAQ,CAACC,EADjB;AAEG,IAAA,EAAE,EAAED,QAAQ,CAACC,EAFhB;AAGG,IAAA,KAAK,EAAED,QAAQ,CAACR,KAHnB;AAIG,IAAA,MAAM,EAAEJ,MAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,CAAjB;AASA,sBACG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,UAAD,CACG;AADH;AAEG,IAAA,KAAK,EAAEH,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAKIY,QALJ,eAMG,oBAAC,OAAD;AACG,IAAA,GAAG,EAAET,MADR;AAEG,IAAA,KAAK,EAAEA,MAFV;AAGG,IAAA,oBAAoB,EAAE,MAAMO,sBAAsB,CAAC,IAAD,CAHrD;AAIG,IAAA,oBAAoB,EAAE,MAAMA,sBAAsB,CAAC,KAAD,CAJrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANH,CADH;AAeF,CA5BD;;AA8BA,eAAeX,WAAf","sourcesContent":["import React,{useState} from \"react\";\nimport PercentageCell from \"../CellRenderer/PercentageCell\";\n\nconst RowFragment = ({ label, RendererType, rowData }) => {\n   const sumRow = rowValues.reduce((sum, value) => sum + value, 0).toFixed(2);\n   const [showPercentageValue, setShowPercentageValue] = useState(false);\n   const Renderer = showPercentageValue ? PercentageCell : RendererType;\n   const rowCells = data.map((cellData) => (\n      <Renderer\n         key={cellData.id}\n         id={cellData.id}\n         value={cellData.value}\n         sumRow={sumRow}\n      />\n   ));\n\n   return (\n      <React.Fragment>\n         <StaticCell\n            // key={label}\n            value={label}\n         />\n         {rowCells}\n         <SumCell\n            key={sumRow}\n            value={sumRow}\n            sumMouseEnterHandler={() => setShowPercentageValue(true)}\n            sumMouseLeaveHandler={() => setShowPercentageValue(false)}\n         />\n      </React.Fragment>\n   );\n};\n\nexport default RowFragment;\n"]},"metadata":{},"sourceType":"module"}