{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/TableRow/index.js\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { removeRow } from \"../../../../../redux/actions\";\nimport CrossButton from \"../../../../CrossButton\";\nimport IncrementCell from \"./CellRenderer/IncrementCell\";\nimport PercentageCell from \"./CellRenderer/PercentageCell\";\nimport StaticCell from \"./CellRenderer/StaticCell\";\nimport SumCell from \"./CellRenderer/SumCell\";\nconst sumRow = data.map(data => data.value).reduce((sum, value) => sum + value, 0);\n\nconst TableRow = ({\n  rowNumber,\n  data\n}) => {\n  const dispatch = useDispatch();\n  const [showPercentageValue, setShowPercentageValue] = useState(false);\n\n  const RowRenderer = cellData => {\n    return showPercentageValue ? /*#__PURE__*/React.createElement(PercentageCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 10\n      }\n    }) : /*#__PURE__*/React.createElement(IncrementCell, {\n      key: cellData.id,\n      id: cellData.id,\n      value: cellData.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 10\n      }\n    });\n  };\n\n  const rowCells = () => data.map(cellData => /*#__PURE__*/React.createElement(RowRenderer, {\n    key: cellData.id,\n    value: cellData.value,\n    sumRow: sumRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }\n  }));\n\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StaticCell, {\n    key: rowNumber,\n    value: rowNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }\n  }), rowCells, /*#__PURE__*/React.createElement(SumCell, {\n    key: sumRow,\n    value: sumRow,\n    sumMouseEnterHandler: () => setShowPercentageValue(true),\n    sumMouseLeaveHandler: () => setShowPercentageValue(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(CrossButton, {\n    buttonClickHandler: () => dispatch(removeRow(rowNumber)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default TableRow;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/Main/Table/TableBody/TableRow/index.js"],"names":["React","useState","useDispatch","removeRow","CrossButton","IncrementCell","PercentageCell","StaticCell","SumCell","sumRow","data","map","value","reduce","sum","TableRow","rowNumber","dispatch","showPercentageValue","setShowPercentageValue","RowRenderer","cellData","id","rowCells"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AAEA,MAAMC,MAAM,GAAGC,IAAI,CACfC,GADW,CACND,IAAD,IAAUA,IAAI,CAACE,KADR,EAEXC,MAFW,CAEJ,CAACC,GAAD,EAAMF,KAAN,KAAgBE,GAAG,GAAGF,KAFlB,EAEyB,CAFzB,CAAf;;AAIA,MAAMG,QAAQ,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaN,EAAAA;AAAb,CAAD,KAAyB;AACvC,QAAMO,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAM,CAACgB,mBAAD,EAAsBC,sBAAtB,IAAgDlB,QAAQ,CAAC,KAAD,CAA9D;;AAEA,QAAMmB,WAAW,GAAIC,QAAD,IAAc;AAC/B,WAAOH,mBAAmB,gBACvB,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADuB,gBAGvB,oBAAC,aAAD;AACG,MAAA,GAAG,EAAEG,QAAQ,CAACC,EADjB;AAEG,MAAA,EAAE,EAAED,QAAQ,CAACC,EAFhB;AAGG,MAAA,KAAK,EAAED,QAAQ,CAACT,KAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH;AASF,GAVD;;AAWA,QAAMW,QAAQ,GAAG,MACdb,IAAI,CAACC,GAAL,CAAUU,QAAD,iBACN,oBAAC,WAAD;AACG,IAAA,GAAG,EAAEA,QAAQ,CAACC,EADjB;AAEG,IAAA,KAAK,EAAED,QAAQ,CAACT,KAFnB;AAGG,IAAA,MAAM,EAAEH,MAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADH;;AAQA,sBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEO,SAAjB;AAA4B,IAAA,KAAK,EAAEA,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAEIO,QAFJ,eAGG,oBAAC,OAAD;AACG,IAAA,GAAG,EAAEd,MADR;AAEG,IAAA,KAAK,EAAEA,MAFV;AAGG,IAAA,oBAAoB,EAAE,MAAMU,sBAAsB,CAAC,IAAD,CAHrD;AAIG,IAAA,oBAAoB,EAAE,MAAMA,sBAAsB,CAAC,KAAD,CAJrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHH,eASG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,WAAD;AACG,IAAA,kBAAkB,EAAE,MAAMF,QAAQ,CAACd,SAAS,CAACa,SAAD,CAAV,CADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CATH,CADH;AAiBF,CAxCD;;AA0CA,eAAeD,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { removeRow } from \"../../../../../redux/actions\";\nimport CrossButton from \"../../../../CrossButton\";\nimport IncrementCell from \"./CellRenderer/IncrementCell\";\nimport PercentageCell from \"./CellRenderer/PercentageCell\";\nimport StaticCell from \"./CellRenderer/StaticCell\";\nimport SumCell from \"./CellRenderer/SumCell\";\n\nconst sumRow = data\n   .map((data) => data.value)\n   .reduce((sum, value) => sum + value, 0);\n\nconst TableRow = ({ rowNumber, data }) => {\n   const dispatch = useDispatch();\n   const [showPercentageValue, setShowPercentageValue] = useState(false);\n\n   const RowRenderer = (cellData) => {\n      return showPercentageValue ? (\n         <PercentageCell />\n      ) : (\n         <IncrementCell\n            key={cellData.id}\n            id={cellData.id}\n            value={cellData.value}\n         />\n      );\n   };\n   const rowCells = () =>\n      data.map((cellData) => (\n         <RowRenderer\n            key={cellData.id}\n            value={cellData.value}\n            sumRow={sumRow}\n         />\n      ));\n   return (\n      <tr>\n         <StaticCell key={rowNumber} value={rowNumber} />\n         {rowCells}\n         <SumCell\n            key={sumRow}\n            value={sumRow}\n            sumMouseEnterHandler={() => setShowPercentageValue(true)}\n            sumMouseLeaveHandler={() => setShowPercentageValue(false)}\n         />\n         <td>\n            <CrossButton\n               buttonClickHandler={() => dispatch(removeRow(rowNumber))}\n            />\n         </td>\n      </tr>\n   );\n};\n\nexport default TableRow;\n"]},"metadata":{},"sourceType":"module"}