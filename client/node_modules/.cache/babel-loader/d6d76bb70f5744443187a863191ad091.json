{"ast":null,"code":"import { INCREMENT_CELL, CREATE_MATRIX, REMOVE_ROW, ADD_ROW, SET_NEAREST_IDS, RESET_NEAREST_IDS, SET_SETTINGS } from \"./types\";\nexport const setSettings = settings => {\n  const rowsCount = settings.rowsCount;\n  const columnsCount = settings.columnsCount;\n  const cellsCount = settings.cellsCount;\n  console.log(rowsCount, columnsCount, cellsCount);\n  return {\n    type: SET_SETTINGS,\n    rowsCount: rowsCount,\n    columnsCount: columnsCount,\n    cellsCount: cellsCount\n  };\n};\nexport const createMatrix = () => {\n  return {\n    type: CREATE_MATRIX\n  };\n};\nexport const incrementCell = (id, value) => {\n  return {\n    type: INCREMENT_CELL,\n    id,\n    value\n  };\n};\nexport const removeRow = rowCount => {\n  return {\n    type: REMOVE_ROW,\n    index: rowCount - 1\n  };\n};\nexport const addRow = columnsCount => {\n  return {\n    type: ADD_ROW,\n    columnsCount\n  };\n};\nexport const setNearestIds = (cellsCount, id) => {\n  return {\n    type: SET_NEAREST_IDS,\n    cellsCount,\n    id\n  };\n};\nexport const resetNearestIds = () => {\n  return {\n    type: RESET_NEAREST_IDS\n  };\n};","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/redux/actions.js"],"names":["INCREMENT_CELL","CREATE_MATRIX","REMOVE_ROW","ADD_ROW","SET_NEAREST_IDS","RESET_NEAREST_IDS","SET_SETTINGS","setSettings","settings","rowsCount","columnsCount","cellsCount","console","log","type","createMatrix","incrementCell","id","value","removeRow","rowCount","index","addRow","setNearestIds","resetNearestIds"],"mappings":"AAAA,SACGA,cADH,EAEGC,aAFH,EAGGC,UAHH,EAIGC,OAJH,EAKGC,eALH,EAMGC,iBANH,EAOGC,YAPH,QAQO,SARP;AAUA,OAAO,MAAMC,WAAW,GAAIC,QAAD,IAAc;AACtC,QAAMC,SAAS,GAAGD,QAAQ,CAACC,SAA3B;AACA,QAAMC,YAAY,GAAGF,QAAQ,CAACE,YAA9B;AACA,QAAMC,UAAU,GAAGH,QAAQ,CAACG,UAA5B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ,EAAuBC,YAAvB,EAAqCC,UAArC;AACA,SAAO;AACJG,IAAAA,IAAI,EAAER,YADF;AAEJG,IAAAA,SAAS,EAAEA,SAFP;AAGJC,IAAAA,YAAY,EAAEA,YAHV;AAIJC,IAAAA,UAAU,EAAEA;AAJR,GAAP;AAMF,CAXM;AAaP,OAAO,MAAMI,YAAY,GAAG,MAAM;AAC/B,SAAO;AACJD,IAAAA,IAAI,EAAEb;AADF,GAAP;AAGF,CAJM;AAMP,OAAO,MAAMe,aAAa,GAAG,CAACC,EAAD,EAAKC,KAAL,KAAe;AACzC,SAAO;AACJJ,IAAAA,IAAI,EAAEd,cADF;AAEJiB,IAAAA,EAFI;AAGJC,IAAAA;AAHI,GAAP;AAKF,CANM;AAQP,OAAO,MAAMC,SAAS,GAAIC,QAAD,IAAc;AACpC,SAAO;AACJN,IAAAA,IAAI,EAAEZ,UADF;AAEJmB,IAAAA,KAAK,EAAED,QAAQ,GAAG;AAFd,GAAP;AAIF,CALM;AAOP,OAAO,MAAME,MAAM,GAAIZ,YAAD,IAAkB;AACrC,SAAO;AACJI,IAAAA,IAAI,EAAEX,OADF;AAEJO,IAAAA;AAFI,GAAP;AAIF,CALM;AAOP,OAAO,MAAMa,aAAa,GAAG,CAACZ,UAAD,EAAaM,EAAb,KAAoB;AAC9C,SAAO;AACJH,IAAAA,IAAI,EAAEV,eADF;AAEJO,IAAAA,UAFI;AAGJM,IAAAA;AAHI,GAAP;AAKF,CANM;AAQP,OAAO,MAAMO,eAAe,GAAG,MAAM;AAClC,SAAO;AACJV,IAAAA,IAAI,EAAET;AADF,GAAP;AAGF,CAJM","sourcesContent":["import {\n   INCREMENT_CELL,\n   CREATE_MATRIX,\n   REMOVE_ROW,\n   ADD_ROW,\n   SET_NEAREST_IDS,\n   RESET_NEAREST_IDS,\n   SET_SETTINGS,\n} from \"./types\";\n\nexport const setSettings = (settings) => {\n   const rowsCount = settings.rowsCount;\n   const columnsCount = settings.columnsCount;\n   const cellsCount = settings.cellsCount;\n   console.log(rowsCount, columnsCount, cellsCount);\n   return {\n      type: SET_SETTINGS,\n      rowsCount: rowsCount,\n      columnsCount: columnsCount,\n      cellsCount: cellsCount,\n   };\n};\n\nexport const createMatrix = () => {\n   return {\n      type: CREATE_MATRIX,\n   };\n};\n\nexport const incrementCell = (id, value) => {\n   return {\n      type: INCREMENT_CELL,\n      id,\n      value,\n   };\n};\n\nexport const removeRow = (rowCount) => {\n   return {\n      type: REMOVE_ROW,\n      index: rowCount - 1,\n   };\n};\n\nexport const addRow = (columnsCount) => {\n   return {\n      type: ADD_ROW,\n      columnsCount,\n   };\n};\n\nexport const setNearestIds = (cellsCount, id) => {\n   return {\n      type: SET_NEAREST_IDS,\n      cellsCount,\n      id,\n   };\n};\n\nexport const resetNearestIds = () => {\n   return {\n      type: RESET_NEAREST_IDS,\n   };\n};\n"]},"metadata":{},"sourceType":"module"}