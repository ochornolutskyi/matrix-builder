{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/Table/TableBody/TableRow/index.js\";\nimport React, { useMemo } from \"react\";\nimport TableCell from \"./TableCell/TableCell\";\nimport StaticCell from \"./TableCell/StaticCell\";\n\nconst TableRow = ({\n  data\n}) => {\n  const getRowCells = () => {\n    return data.map((cellData, index) => [/*#__PURE__*/React.createElement(StaticCell, {\n      key: index,\n      value: index + 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(TableCell, {\n      key: index,\n      id: cellData.id,\n      value: cellData.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 10\n      }\n    })]);\n  }; // if (cellData.rowNumber) {\n  //    return <StaticCell key={index} value={cellData.rowNumber} />;\n  // }\n\n\n  const sumRowCell = useMemo(() => {\n    return data.map(data => data.value).reduce((sum = 0, value) => sum + value);\n  }, [data]);\n  const cells = [getRowCells()];\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, cells);\n};\n\nexport default TableRow;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/Table/TableBody/TableRow/index.js"],"names":["React","useMemo","TableCell","StaticCell","TableRow","data","getRowCells","map","cellData","index","id","value","sumRowCell","reduce","sum","cells"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC5B,QAAMC,WAAW,GAAG,MAAM;AACvB,WAAOD,IAAI,CAACE,GAAL,CAAS,CAACC,QAAD,EAAWC,KAAX,KAAqB,cAClC,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAEA,KAAjB;AAAwB,MAAA,KAAK,EAAEA,KAAK,GAAG,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADkC,eAElC,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,KAAhB;AAAuB,MAAA,EAAE,EAAED,QAAQ,CAACE,EAApC;AAAwC,MAAA,KAAK,EAAEF,QAAQ,CAACG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFkC,CAA9B,CAAP;AAIF,GALD,CAD4B,CAQ5B;AACA;AACA;;;AACA,QAAMC,UAAU,GAAGX,OAAO,CAAC,MAAM;AAC9B,WAAOI,IAAI,CACPE,GADG,CACEF,IAAD,IAAUA,IAAI,CAACM,KADhB,EAEHE,MAFG,CAEI,CAACC,GAAG,GAAG,CAAP,EAAUH,KAAV,KAAoBG,GAAG,GAAGH,KAF9B,CAAP;AAGF,GAJyB,EAIvB,CAACN,IAAD,CAJuB,CAA1B;AAKA,QAAMU,KAAK,GAAG,CAACT,WAAW,EAAZ,CAAd;AAEA,sBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIS,KADJ,CADH;AAMF,CAxBD;;AA0BA,eAAeX,QAAf","sourcesContent":["import React, { useMemo } from \"react\";\nimport TableCell from \"./TableCell/TableCell\";\nimport StaticCell from \"./TableCell/StaticCell\";\n\nconst TableRow = ({ data }) => {\n   const getRowCells = () => {\n      return data.map((cellData, index) => [\n         <StaticCell key={index} value={index + 1} />,\n         <TableCell key={index} id={cellData.id} value={cellData.value} />,\n      ]);\n   };\n\n   // if (cellData.rowNumber) {\n   //    return <StaticCell key={index} value={cellData.rowNumber} />;\n   // }\n   const sumRowCell = useMemo(() => {\n      return data\n         .map((data) => data.value)\n         .reduce((sum = 0, value) => sum + value);\n   }, [data]);\n   const cells = [getRowCells()];\n\n   return (\n      <tr>\n         {cells}\n         {/* <StaticCell value={sumCell} /> */}\n      </tr>\n   );\n};\n\nexport default TableRow;\n"]},"metadata":{},"sourceType":"module"}