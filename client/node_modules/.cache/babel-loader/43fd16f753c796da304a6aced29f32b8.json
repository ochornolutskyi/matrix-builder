{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/SettingsTable/index.js\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSettings } from \"../../redux/actions\";\nimport Button from \"../Button\";\nimport InputCounts from \"./InputCounts\";\n\nconst SettingsTable = () => {\n  const matrixData = useSelector(state => state.matrix.data);\n  const settings = useSelector(state => state.matrix.settings);\n  const dispatch = useDispatch();\n  const [rowsCount, setRowsCount] = useState(settings.rowsCount);\n  const [columnsCount, setColumnsCount] = useState(settings.columnsCount);\n  const [cellsCount, setCellsCount] = useState(settings.cellsCount);\n\n  const setTableRows = value => {\n    setRowsCount(+value);\n  };\n\n  const setTableColumns = value => {\n    let newSettings = { ...settings\n    };\n    newSettings.columnsCount = +value;\n    return newSettings;\n  };\n\n  const setTableCells = value => {\n    let newSettings = { ...settings\n    };\n    newSettings.cellsCount = +value;\n    return newSettings;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settings-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }\n  }, \"Welcome to Matrix Builder\"), /*#__PURE__*/React.createElement(InputCounts, {\n    id: \"rows\",\n    label: \"Set the rows count\",\n    value: settings.rowsCount,\n    handleChange: event => setTableRows(event.target.value) // blurHandle={() => dispatch(rebuildMatrix())}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(InputCounts, {\n    id: \"columns\",\n    label: \"Set the columns count\",\n    value: settings.columnsCount // handleChange={(event) =>\n    //    dispatch(setSettings(setTableColumns(event.target.value)))\n    // }\n    // blurHandle={() => dispatch(rebuildMatrix())}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(InputCounts, {\n    id: \"cells\",\n    label: \"Set the count of cells to show the nearest value\",\n    value: settings.cellsCount // handleChange={(event) =>\n    //    dispatch(setSettings(setTableCells(event.target.value)))\n    // }\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }\n  }), matrixData.length === 0 ? /*#__PURE__*/React.createElement(Button, {\n    buttonText: \"Apply settings of matrix\",\n    buttonClickHandler: () => dispatch(createMatrix()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }) : null);\n};\n\nexport default SettingsTable;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/SettingsTable/index.js"],"names":["React","useState","useDispatch","useSelector","setSettings","Button","InputCounts","SettingsTable","matrixData","state","matrix","data","settings","dispatch","rowsCount","setRowsCount","columnsCount","setColumnsCount","cellsCount","setCellsCount","setTableRows","value","setTableColumns","newSettings","setTableCells","event","target","length","createMatrix"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AACzB,QAAMC,UAAU,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaC,IAAzB,CAA9B;AACA,QAAMC,QAAQ,GAAGT,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaE,QAAzB,CAA5B;AACA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAACW,QAAQ,CAACE,SAAV,CAA1C;AACA,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAACW,QAAQ,CAACI,YAAV,CAAhD;AACA,QAAM,CAACE,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAACW,QAAQ,CAACM,UAAV,CAA5C;;AAEA,QAAME,YAAY,GAAIC,KAAD,IAAW;AAC7BN,IAAAA,YAAY,CAAC,CAACM,KAAF,CAAZ;AACF,GAFD;;AAGA,QAAMC,eAAe,GAAID,KAAD,IAAW;AAChC,QAAIE,WAAW,GAAG,EAAE,GAAGX;AAAL,KAAlB;AACAW,IAAAA,WAAW,CAACP,YAAZ,GAA2B,CAACK,KAA5B;AACA,WAAOE,WAAP;AACF,GAJD;;AAKA,QAAMC,aAAa,GAAIH,KAAD,IAAW;AAC9B,QAAIE,WAAW,GAAG,EAAE,GAAGX;AAAL,KAAlB;AACAW,IAAAA,WAAW,CAACL,UAAZ,GAAyB,CAACG,KAA1B;AACA,WAAOE,WAAP;AACF,GAJD;;AAMA,sBACG;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADH,eAEG,oBAAC,WAAD;AACG,IAAA,EAAE,EAAC,MADN;AAEG,IAAA,KAAK,EAAC,oBAFT;AAGG,IAAA,KAAK,EAAEX,QAAQ,CAACE,SAHnB;AAIG,IAAA,YAAY,EAAGW,KAAD,IAAWL,YAAY,CAACK,KAAK,CAACC,MAAN,CAAaL,KAAd,CAJxC,CAKG;AALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,eASG,oBAAC,WAAD;AACG,IAAA,EAAE,EAAC,SADN;AAEG,IAAA,KAAK,EAAC,uBAFT;AAGG,IAAA,KAAK,EAAET,QAAQ,CAACI,YAHnB,CAIG;AACA;AACA;AACA;AAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATH,eAkBG,oBAAC,WAAD;AACG,IAAA,EAAE,EAAC,OADN;AAEG,IAAA,KAAK,EAAC,kDAFT;AAGG,IAAA,KAAK,EAAEJ,QAAQ,CAACM,UAHnB,CAIG;AACA;AACA;AANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBH,EA0BIV,UAAU,CAACmB,MAAX,KAAsB,CAAtB,gBACE,oBAAC,MAAD;AACG,IAAA,UAAU,EAAC,0BADd;AAEG,IAAA,kBAAkB,EAAE,MAAMd,QAAQ,CAACe,YAAY,EAAb,CAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAKG,IA/BP,CADH;AAmCF,CAzDD;;AA2DA,eAAerB,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSettings } from \"../../redux/actions\";\nimport Button from \"../Button\";\nimport InputCounts from \"./InputCounts\";\n\nconst SettingsTable = () => {\n   const matrixData = useSelector((state) => state.matrix.data);\n   const settings = useSelector((state) => state.matrix.settings);\n   const dispatch = useDispatch();\n   const [rowsCount, setRowsCount] = useState(settings.rowsCount);\n   const [columnsCount, setColumnsCount] = useState(settings.columnsCount);\n   const [cellsCount, setCellsCount] = useState(settings.cellsCount);\n\n   const setTableRows = (value) => {\n      setRowsCount(+value);\n   };\n   const setTableColumns = (value) => {\n      let newSettings = { ...settings };\n      newSettings.columnsCount = +value;\n      return newSettings;\n   };\n   const setTableCells = (value) => {\n      let newSettings = { ...settings };\n      newSettings.cellsCount = +value;\n      return newSettings;\n   };\n\n   return (\n      <div className=\"settings-table\">\n         <h1>Welcome to Matrix Builder</h1>\n         <InputCounts\n            id=\"rows\"\n            label=\"Set the rows count\"\n            value={settings.rowsCount}\n            handleChange={(event) => setTableRows(event.target.value)}\n            // blurHandle={() => dispatch(rebuildMatrix())}\n         />\n         <InputCounts\n            id=\"columns\"\n            label=\"Set the columns count\"\n            value={settings.columnsCount}\n            // handleChange={(event) =>\n            //    dispatch(setSettings(setTableColumns(event.target.value)))\n            // }\n            // blurHandle={() => dispatch(rebuildMatrix())}\n         />\n         <InputCounts\n            id=\"cells\"\n            label=\"Set the count of cells to show the nearest value\"\n            value={settings.cellsCount}\n            // handleChange={(event) =>\n            //    dispatch(setSettings(setTableCells(event.target.value)))\n            // }\n         />\n         {matrixData.length === 0 ? (\n            <Button\n               buttonText=\"Apply settings of matrix\"\n               buttonClickHandler={() => dispatch(createMatrix())}\n            />\n         ) : null}\n      </div>\n   );\n};\n\nexport default SettingsTable;\n"]},"metadata":{},"sourceType":"module"}