{"ast":null,"code":"var _jsxFileName = \"/home/superproger/workspace/matrix-builder/client/src/components/StartPage/StartPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport InputCounts from \"./InputCounts\";\nimport \"./StartPage.scss\";\n\nconst StartPage = () => {\n  const [rows, setRows] = useState(0);\n  const [columns, setColumns] = useState(0);\n  const [cells, setCells] = useState(0);\n\n  const handleChangeRows = event => {\n    setRows(event.target.value);\n  };\n\n  const handleChangeColumns = event => {\n    setColumns(event.target.value);\n  };\n\n  const handleChangeCells = event => {\n    setCells(event.target.value);\n  };\n\n  const createMatrix = (rowsCount, columnsCount, cellsCount) => {\n    let matrix = [];\n\n    const createRows = () => {\n      for (let i = 0; i < rowsCount; i++) {\n        const row = [];\n        matrix.push(row);\n      }\n    };\n\n    const createColumns = () => {\n      matrix.forEach((item, index) => {\n        for (let i = 0; i < columnsCount; i++) {\n          const cellObject = {\n            id: String(index + 1).concat(i + 1),\n            value: Math.fixed(Math.random() * 1000 + 1)\n          };\n          item.push(cellObject);\n        }\n      });\n    };\n\n    createRows();\n    createColumns();\n    console.log(matrix);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"start-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }\n  }, \"Welcome to Matrix Builder\"), /*#__PURE__*/React.createElement(InputCounts, {\n    id: \"rows\",\n    label: \"Set the rows count\",\n    handleChange: handleChangeRows,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(InputCounts, {\n    id: \"columns\",\n    label: \"Set the columns count\",\n    handleChange: handleChangeColumns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(InputCounts, {\n    id: \"cells\",\n    label: \"Set the count of cells to show the nearest value\",\n    handleChange: handleChangeCells,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => createMatrix(rows, columns, cells),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 10\n    }\n  }, \"Apply settings of matrix\"));\n};\n\nexport default StartPage;","map":{"version":3,"sources":["/home/superproger/workspace/matrix-builder/client/src/components/StartPage/StartPage.js"],"names":["React","useState","useEffect","InputCounts","StartPage","rows","setRows","columns","setColumns","cells","setCells","handleChangeRows","event","target","value","handleChangeColumns","handleChangeCells","createMatrix","rowsCount","columnsCount","cellsCount","matrix","createRows","i","row","push","createColumns","forEach","item","index","cellObject","id","String","concat","Math","fixed","random","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport InputCounts from \"./InputCounts\";\nimport \"./StartPage.scss\";\n\nconst StartPage = () => {\n   const [rows, setRows] = useState(0);\n   const [columns, setColumns] = useState(0);\n   const [cells, setCells] = useState(0);\n\n   const handleChangeRows = (event) => {\n      setRows(event.target.value);\n   };\n   const handleChangeColumns = (event) => {\n      setColumns(event.target.value);\n   };\n   const handleChangeCells = (event) => {\n      setCells(event.target.value);\n   };\n   const createMatrix = (rowsCount, columnsCount, cellsCount) => {\n      let matrix = [];\n      const createRows = () => {\n         for (let i = 0; i < rowsCount; i++) {\n            const row = [];\n            matrix.push(row);\n         }\n      };\n      const createColumns = () => {\n         matrix.forEach((item, index) => {\n            for (let i = 0; i < columnsCount; i++) {\n               const cellObject = {\n                  id: String(index + 1).concat(i + 1),\n                  value: Math.fixed(Math.random()*1000 + 1),\n               };\n               item.push(cellObject);\n            }\n         });\n      };\n\n      createRows();\n      createColumns();\n\n      console.log(matrix);\n   };\n\n   return (\n      <div className=\"start-page\">\n         <h1>Welcome to Matrix Builder</h1>\n         <InputCounts\n            id=\"rows\"\n            label=\"Set the rows count\"\n            handleChange={handleChangeRows}\n         />\n         <InputCounts\n            id=\"columns\"\n            label=\"Set the columns count\"\n            handleChange={handleChangeColumns}\n         />\n         <InputCounts\n            id=\"cells\"\n            label=\"Set the count of cells to show the nearest value\"\n            handleChange={handleChangeCells}\n         />\n\n         <button onClick={() => createMatrix(rows, columns, cells)}>\n            Apply settings of matrix\n         </button>\n      </div>\n   );\n};\n\nexport default StartPage;\n"]},"metadata":{},"sourceType":"module"}